{
	"id": "99ceae7b0db83f7a047f2d0f0039cbdc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BEP20.sol": {
				"content": "pragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n\r\n\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\n\r\n \r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    event TokenLock();\r\n    event TokenUnlock();\r\n    event WalletLock(address indexed wallet);\r\n    event WalletUnlock(address indexed wallet);  \r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n\r\n    bool public tokenLocked;\r\n    mapping(address => bool) public walletLocked;\r\n\r\n\r\n    function lockToken() external onlyOwner {\r\n        require(!tokenLocked, \"Token is already locked\");\r\n        tokenLocked = true;\r\n        emit TokenLock();\r\n    }\r\n\r\n    function unlockToken() external onlyOwner {\r\n        require(tokenLocked, \"Token is already unlocked\");\r\n        tokenLocked = false;\r\n        emit TokenUnlock();\r\n    }\r\n\r\n    function lockWallet(address _wallet) external onlyOwner {\r\n        require(!walletLocked[_wallet], \"Wallet is already locked\");\r\n        walletLocked[_wallet] = true;\r\n        emit WalletLock(_wallet);\r\n    }\r\n\r\n    function unlockWallet(address _wallet) external onlyOwner {\r\n        require(walletLocked[_wallet], \"Wallet is already unlocked\");\r\n        walletLocked[_wallet] = false;\r\n        emit WalletUnlock(_wallet);\r\n    }\r\n\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract BEP20Token is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n\r\n\r\n  constructor() public {\r\n    _name = \"ImMetaTrader\";\r\n    _symbol = \"IMMT\";\r\n    _decimals = 8;\r\n    _totalSupply = 1000000000000000000;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BEP20.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "TokenLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "TokenUnlock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "WalletLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "WalletUnlock",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "lockToken",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallet",
									"type": "address"
								}
							],
							"name": "lockWallet",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "tokenLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unlockToken",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallet",
									"type": "address"
								}
							],
							"name": "unlockWallet",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "walletLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20.sol\":12344:20176  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BEP20.sol\":12676:12919  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/BEP20.sol\":12676:12919  constructor() public {\r... */\n  pop\n    /* \"contracts/BEP20.sol\":9978:9995  address msgSender */\n  0x00\n    /* \"contracts/BEP20.sol\":9998:10010  _msgSender() */\n  tag_7\n    /* \"contracts/BEP20.sol\":9998:10008  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/BEP20.sol\":9998:10010  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/BEP20.sol\":9978:10010  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/BEP20.sol\":10026:10035  msgSender */\n  dup1\n    /* \"contracts/BEP20.sol\":10017:10023  _owner */\n  0x00\n  dup1\n    /* \"contracts/BEP20.sol\":10017:10035  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20.sol\":10080:10089  msgSender */\n  dup1\n    /* \"contracts/BEP20.sol\":10047:10090  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BEP20.sol\":10076:10077  0 */\n  0x00\n    /* \"contracts/BEP20.sol\":10047:10090  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/BEP20.sol\":9947:10096  constructor () internal {\r... */\n  pop\n    /* \"contracts/BEP20.sol\":12704:12726  _name = \"ImMetaTrader\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x496d4d6574615472616465720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/BEP20.sol\":12704:12709  _name */\n  0x07\n    /* \"contracts/BEP20.sol\":12704:12726  _name = \"ImMetaTrader\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/BEP20.sol\":12733:12749  _symbol = \"IMMT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x494d4d5400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/BEP20.sol\":12733:12740  _symbol */\n  0x06\n    /* \"contracts/BEP20.sol\":12733:12749  _symbol = \"IMMT\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/BEP20.sol\":12768:12769  8 */\n  0x08\n    /* \"contracts/BEP20.sol\":12756:12765  _decimals */\n  0x05\n  0x00\n    /* \"contracts/BEP20.sol\":12756:12769  _decimals = 8 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20.sol\":12791:12810  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/BEP20.sol\":12776:12788  _totalSupply */\n  0x04\n    /* \"contracts/BEP20.sol\":12776:12810  _totalSupply = 1000000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20.sol\":12841:12853  _totalSupply */\n  sload(0x04)\n    /* \"contracts/BEP20.sol\":12817:12826  _balances */\n  0x02\n    /* \"contracts/BEP20.sol\":12817:12838  _balances[msg.sender] */\n  0x00\n    /* \"contracts/BEP20.sol\":12827:12837  msg.sender */\n  caller\n    /* \"contracts/BEP20.sol\":12817:12838  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/BEP20.sol\":12817:12853  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20.sol\":12888:12898  msg.sender */\n  caller\n    /* \"contracts/BEP20.sol\":12867:12913  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BEP20.sol\":12884:12885  0 */\n  0x00\n    /* \"contracts/BEP20.sol\":12867:12913  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/BEP20.sol\":12900:12912  _totalSupply */\n  sload(0x04)\n    /* \"contracts/BEP20.sol\":12867:12913  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/BEP20.sol\":12344:20176  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  jump(tag_13)\n    /* \"contracts/BEP20.sol\":3709:3801  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"contracts/BEP20.sol\":3754:3769  address payable */\n  0x00\n    /* \"contracts/BEP20.sol\":3785:3795  msg.sender */\n  caller\n    /* \"contracts/BEP20.sol\":3778:3795  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/BEP20.sol\":3709:3801  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/BEP20.sol\":12344:20176  contract BEP20Token is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20.sol\":12344:20176  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/BEP20.sol\":12344:20176  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbca7a9e2\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcd808d94\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x893d20e8\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8fe10615\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x313ce567\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3e0f974c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6a630559\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18a24b5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BEP20.sol\":13393:13472  function name() external view returns (string memory) {\r... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_30:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_30)\n    tag_32:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20.sol\":13393:13472  function name() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":14433:14577  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"contracts/BEP20.sol\":14433:14577  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":13528:13615  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":10362:10531  function unlockToken() external onlyOwner {\r... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/BEP20.sol\":15022:15314  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/BEP20.sol\":15022:15314  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":13121:13200  function decimals() external view returns (uint8) {\r... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":15700:15900  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"contracts/BEP20.sol\":15700:15900  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":10755:10969  function unlockWallet(address _wallet) external onlyOwner {\r... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"contracts/BEP20.sol\":10755:10969  function unlockWallet(address _wallet) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/BEP20.sol\":10106:10129  bool public tokenLocked */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":13669:13775  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_55:\n        /* \"contracts/BEP20.sol\":13669:13775  function balanceOf(address account) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":11646:11776  function renounceOwnership() public onlyOwner {\r... */\n    tag_13:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/BEP20.sol\":12983:13062  function getOwner() external view returns (address) {\r... */\n    tag_14:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":11044:11117  function owner() public view returns (address) {\r... */\n    tag_15:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":10136:10180  mapping(address => bool) public walletLocked */\n    tag_16:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_64:\n        /* \"contracts/BEP20.sol\":10136:10180  mapping(address => bool) public walletLocked */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":13257:13340  function symbol() external view returns (string memory) {\r... */\n    tag_17:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_68:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_68)\n    tag_70:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20.sol\":13257:13340  function symbol() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_71:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":16823:16943  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_18:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_73:\n        /* \"contracts/BEP20.sol\":16823:16943  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":16372:16623  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_19:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_76:\n        /* \"contracts/BEP20.sol\":16372:16623  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":13969:14119  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_20:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_79:\n        /* \"contracts/BEP20.sol\":13969:14119  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":10191:10354  function lockToken() external onlyOwner {\r... */\n    tag_21:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/BEP20.sol\":10539:10747  function lockWallet(address _wallet) external onlyOwner {\r... */\n    tag_22:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n        /* \"contracts/BEP20.sol\":10539:10747  function lockWallet(address _wallet) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/BEP20.sol\":14173:14303  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_23:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n        /* \"contracts/BEP20.sol\":14173:14303  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":11921:12024  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_24:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n        /* \"contracts/BEP20.sol\":11921:12024  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/BEP20.sol\":13393:13472  function name() external view returns (string memory) {\r... */\n    tag_29:\n        /* \"contracts/BEP20.sol\":13432:13445  string memory */\n      0x60\n        /* \"contracts/BEP20.sol\":13461:13466  _name */\n      0x07\n        /* \"contracts/BEP20.sol\":13454:13466  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":13393:13472  function name() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":14433:14577  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_36:\n        /* \"contracts/BEP20.sol\":14501:14505  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":14514:14553  _approve(_msgSender(), spender, amount) */\n      tag_97\n        /* \"contracts/BEP20.sol\":14523:14535  _msgSender() */\n      tag_98\n        /* \"contracts/BEP20.sol\":14523:14533  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":14523:14535  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/BEP20.sol\":14537:14544  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":14546:14552  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":14514:14522  _approve */\n      tag_100\n        /* \"contracts/BEP20.sol\":14514:14553  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/BEP20.sol\":14567:14571  true */\n      0x01\n        /* \"contracts/BEP20.sol\":14560:14571  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":14433:14577  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":13528:13615  function totalSupply() external view returns (uint256) {\r... */\n    tag_38:\n        /* \"contracts/BEP20.sol\":13574:13581  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":13597:13609  _totalSupply */\n      sload(0x04)\n        /* \"contracts/BEP20.sol\":13590:13609  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":13528:13615  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":10362:10531  function unlockToken() external onlyOwner {\r... */\n    tag_40:\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      tag_103\n        /* \"contracts/BEP20.sol\":11248:11258  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11244  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20.sol\":11230:11297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/BEP20.sol\":10423:10434  tokenLocked */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP20.sol\":10415:10464  require(tokenLocked, \"Token is already unlocked\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x546f6b656e20697320616c726561647920756e6c6f636b656400000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/BEP20.sol\":10489:10494  false */\n      0x00\n        /* \"contracts/BEP20.sol\":10475:10486  tokenLocked */\n      dup1\n      0x14\n        /* \"contracts/BEP20.sol\":10475:10494  tokenLocked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":10510:10523  TokenUnlock() */\n      0x3ebb0e684af63268f35c843a72f657183e7a0786fb939148605b0262343b4450\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/BEP20.sol\":10362:10531  function unlockToken() external onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/BEP20.sol\":15022:15314  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_43:\n        /* \"contracts/BEP20.sol\":15113:15117  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":15126:15162  _transfer(sender, recipient, amount) */\n      tag_108\n        /* \"contracts/BEP20.sol\":15136:15142  sender */\n      dup5\n        /* \"contracts/BEP20.sol\":15144:15153  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":15155:15161  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":15126:15135  _transfer */\n      tag_109\n        /* \"contracts/BEP20.sol\":15126:15162  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/BEP20.sol\":15169:15290  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_110\n        /* \"contracts/BEP20.sol\":15178:15184  sender */\n      dup5\n        /* \"contracts/BEP20.sol\":15186:15198  _msgSender() */\n      tag_111\n        /* \"contracts/BEP20.sol\":15186:15196  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":15186:15198  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/BEP20.sol\":15200:15289  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_112\n        /* \"contracts/BEP20.sol\":15238:15244  amount */\n      dup6\n        /* \"contracts/BEP20.sol\":15200:15289  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/BEP20.sol\":15200:15211  _allowances */\n      0x03\n        /* \"contracts/BEP20.sol\":15200:15219  _allowances[sender] */\n      0x00\n        /* \"contracts/BEP20.sol\":15212:15218  sender */\n      dup12\n        /* \"contracts/BEP20.sol\":15200:15219  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":15200:15233  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/BEP20.sol\":15220:15232  _msgSender() */\n      tag_113\n        /* \"contracts/BEP20.sol\":15220:15230  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":15220:15232  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/BEP20.sol\":15200:15233  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":15200:15237  _allowances[sender][_msgSender()].sub */\n      tag_114\n      swap1\n        /* \"contracts/BEP20.sol\":15200:15289  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/BEP20.sol\":15169:15177  _approve */\n      tag_100\n        /* \"contracts/BEP20.sol\":15169:15290  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/BEP20.sol\":15304:15308  true */\n      0x01\n        /* \"contracts/BEP20.sol\":15297:15308  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":15022:15314  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":13121:13200  function decimals() external view returns (uint8) {\r... */\n    tag_45:\n        /* \"contracts/BEP20.sol\":13164:13169  uint8 */\n      0x00\n        /* \"contracts/BEP20.sol\":13185:13194  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP20.sol\":13178:13194  return _decimals */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":13121:13200  function decimals() external view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":15700:15900  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_48:\n        /* \"contracts/BEP20.sol\":15780:15784  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":15793:15876  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_117\n        /* \"contracts/BEP20.sol\":15802:15814  _msgSender() */\n      tag_118\n        /* \"contracts/BEP20.sol\":15802:15812  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":15802:15814  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/BEP20.sol\":15816:15823  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":15825:15875  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_119\n        /* \"contracts/BEP20.sol\":15864:15874  addedValue */\n      dup6\n        /* \"contracts/BEP20.sol\":15825:15836  _allowances */\n      0x03\n        /* \"contracts/BEP20.sol\":15825:15850  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20.sol\":15837:15849  _msgSender() */\n      tag_120\n        /* \"contracts/BEP20.sol\":15837:15847  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":15837:15849  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/BEP20.sol\":15825:15850  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":15825:15859  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP20.sol\":15851:15858  spender */\n      dup10\n        /* \"contracts/BEP20.sol\":15825:15859  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":15825:15863  _allowances[_msgSender()][spender].add */\n      tag_121\n      swap1\n        /* \"contracts/BEP20.sol\":15825:15875  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/BEP20.sol\":15793:15801  _approve */\n      tag_100\n        /* \"contracts/BEP20.sol\":15793:15876  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/BEP20.sol\":15890:15894  true */\n      0x01\n        /* \"contracts/BEP20.sol\":15883:15894  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":15700:15900  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":10755:10969  function unlockWallet(address _wallet) external onlyOwner {\r... */\n    tag_51:\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      tag_123\n        /* \"contracts/BEP20.sol\":11248:11258  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11244  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20.sol\":11230:11297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/BEP20.sol\":10832:10844  walletLocked */\n      0x01\n        /* \"contracts/BEP20.sol\":10832:10853  walletLocked[_wallet] */\n      0x00\n        /* \"contracts/BEP20.sol\":10845:10852  _wallet */\n      dup3\n        /* \"contracts/BEP20.sol\":10832:10853  walletLocked[_wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP20.sol\":10824:10884  require(walletLocked[_wallet], \"Wallet is already unlocked\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x57616c6c657420697320616c726561647920756e6c6f636b6564000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/BEP20.sol\":10919:10924  false */\n      0x00\n        /* \"contracts/BEP20.sol\":10895:10907  walletLocked */\n      0x01\n        /* \"contracts/BEP20.sol\":10895:10916  walletLocked[_wallet] */\n      0x00\n        /* \"contracts/BEP20.sol\":10908:10915  _wallet */\n      dup4\n        /* \"contracts/BEP20.sol\":10895:10916  walletLocked[_wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BEP20.sol\":10895:10924  walletLocked[_wallet] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":10953:10960  _wallet */\n      dup1\n        /* \"contracts/BEP20.sol\":10940:10961  WalletUnlock(_wallet) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5185e00b6ef8de975b632ca028d85781bd6da04dbdda5047c5e595aa7b747137\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BEP20.sol\":10755:10969  function unlockWallet(address _wallet) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":10106:10129  bool public tokenLocked */\n    tag_53:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BEP20.sol\":13669:13775  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_56:\n        /* \"contracts/BEP20.sol\":13728:13735  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":13751:13760  _balances */\n      0x02\n        /* \"contracts/BEP20.sol\":13751:13769  _balances[account] */\n      0x00\n        /* \"contracts/BEP20.sol\":13761:13768  account */\n      dup4\n        /* \"contracts/BEP20.sol\":13751:13769  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":13744:13769  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":13669:13775  function balanceOf(address account) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":11646:11776  function renounceOwnership() public onlyOwner {\r... */\n    tag_58:\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      tag_129\n        /* \"contracts/BEP20.sol\":11248:11258  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11244  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20.sol\":11230:11297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/BEP20.sol\":11741:11742  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":11704:11744  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11725:11731  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11704:11744  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":11768:11769  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":11751:11757  _owner */\n      dup1\n      0x00\n        /* \"contracts/BEP20.sol\":11751:11770  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":11646:11776  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/BEP20.sol\":12983:13062  function getOwner() external view returns (address) {\r... */\n    tag_60:\n        /* \"contracts/BEP20.sol\":13026:13033  address */\n      0x00\n        /* \"contracts/BEP20.sol\":13049:13056  owner() */\n      tag_133\n        /* \"contracts/BEP20.sol\":13049:13054  owner */\n      tag_62\n        /* \"contracts/BEP20.sol\":13049:13056  owner() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/BEP20.sol\":13042:13056  return owner() */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":12983:13062  function getOwner() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":11044:11117  function owner() public view returns (address) {\r... */\n    tag_62:\n        /* \"contracts/BEP20.sol\":11082:11089  address */\n      0x00\n        /* \"contracts/BEP20.sol\":11105:11111  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11098:11111  return _owner */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":11044:11117  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":10136:10180  mapping(address => bool) public walletLocked */\n    tag_65:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BEP20.sol\":13257:13340  function symbol() external view returns (string memory) {\r... */\n    tag_67:\n        /* \"contracts/BEP20.sol\":13298:13311  string memory */\n      0x60\n        /* \"contracts/BEP20.sol\":13327:13334  _symbol */\n      0x06\n        /* \"contracts/BEP20.sol\":13320:13334  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":13257:13340  function symbol() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":16823:16943  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_74:\n        /* \"contracts/BEP20.sol\":16879:16883  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      tag_140\n        /* \"contracts/BEP20.sol\":11248:11258  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11244  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20.sol\":11230:11297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/BEP20.sol\":16892:16919  _mint(_msgSender(), amount) */\n      tag_143\n        /* \"contracts/BEP20.sol\":16898:16910  _msgSender() */\n      tag_144\n        /* \"contracts/BEP20.sol\":16898:16908  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":16898:16910  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/BEP20.sol\":16912:16918  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":16892:16897  _mint */\n      tag_145\n        /* \"contracts/BEP20.sol\":16892:16919  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/BEP20.sol\":16933:16937  true */\n      0x01\n        /* \"contracts/BEP20.sol\":16926:16937  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":16823:16943  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":16372:16623  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_77:\n        /* \"contracts/BEP20.sol\":16457:16461  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":16470:16599  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_147\n        /* \"contracts/BEP20.sol\":16479:16491  _msgSender() */\n      tag_148\n        /* \"contracts/BEP20.sol\":16479:16489  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":16479:16491  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/BEP20.sol\":16493:16500  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":16502:16598  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_149\n        /* \"contracts/BEP20.sol\":16541:16556  subtractedValue */\n      dup6\n        /* \"contracts/BEP20.sol\":16502:16598  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/BEP20.sol\":16502:16513  _allowances */\n      0x03\n        /* \"contracts/BEP20.sol\":16502:16527  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20.sol\":16514:16526  _msgSender() */\n      tag_150\n        /* \"contracts/BEP20.sol\":16514:16524  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":16514:16526  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/BEP20.sol\":16502:16527  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":16502:16536  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP20.sol\":16528:16535  spender */\n      dup11\n        /* \"contracts/BEP20.sol\":16502:16536  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":16502:16540  _allowances[_msgSender()][spender].sub */\n      tag_114\n      swap1\n        /* \"contracts/BEP20.sol\":16502:16598  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/BEP20.sol\":16470:16478  _approve */\n      tag_100\n        /* \"contracts/BEP20.sol\":16470:16599  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/BEP20.sol\":16613:16617  true */\n      0x01\n        /* \"contracts/BEP20.sol\":16606:16617  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":16372:16623  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":13969:14119  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_80:\n        /* \"contracts/BEP20.sol\":14040:14044  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":14053:14095  _transfer(_msgSender(), recipient, amount) */\n      tag_152\n        /* \"contracts/BEP20.sol\":14063:14075  _msgSender() */\n      tag_153\n        /* \"contracts/BEP20.sol\":14063:14073  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":14063:14075  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/BEP20.sol\":14077:14086  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":14088:14094  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":14053:14062  _transfer */\n      tag_109\n        /* \"contracts/BEP20.sol\":14053:14095  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/BEP20.sol\":14109:14113  true */\n      0x01\n        /* \"contracts/BEP20.sol\":14102:14113  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":13969:14119  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":10191:10354  function lockToken() external onlyOwner {\r... */\n    tag_82:\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      tag_155\n        /* \"contracts/BEP20.sol\":11248:11258  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11244  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20.sol\":11230:11297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/BEP20.sol\":10251:10262  tokenLocked */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP20.sol\":10250:10262  !tokenLocked */\n      iszero\n        /* \"contracts/BEP20.sol\":10242:10290  require(!tokenLocked, \"Token is already locked\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x546f6b656e20697320616c7265616479206c6f636b6564000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/BEP20.sol\":10315:10319  true */\n      0x01\n        /* \"contracts/BEP20.sol\":10301:10312  tokenLocked */\n      0x00\n      0x14\n        /* \"contracts/BEP20.sol\":10301:10319  tokenLocked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":10335:10346  TokenLock() */\n      0x4470ec49ae79dedf38de6cfeea4279d5ea6b681c2aa4c404b2f7e1778bd22280\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/BEP20.sol\":10191:10354  function lockToken() external onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/BEP20.sol\":10539:10747  function lockWallet(address _wallet) external onlyOwner {\r... */\n    tag_85:\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      tag_160\n        /* \"contracts/BEP20.sol\":11248:11258  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11244  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20.sol\":11230:11297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/BEP20.sol\":10615:10627  walletLocked */\n      0x01\n        /* \"contracts/BEP20.sol\":10615:10636  walletLocked[_wallet] */\n      0x00\n        /* \"contracts/BEP20.sol\":10628:10635  _wallet */\n      dup3\n        /* \"contracts/BEP20.sol\":10615:10636  walletLocked[_wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP20.sol\":10614:10636  !walletLocked[_wallet] */\n      iszero\n        /* \"contracts/BEP20.sol\":10606:10665  require(!walletLocked[_wallet], \"Wallet is already locked\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x57616c6c657420697320616c7265616479206c6f636b65640000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contracts/BEP20.sol\":10700:10704  true */\n      0x01\n        /* \"contracts/BEP20.sol\":10676:10688  walletLocked */\n      dup1\n        /* \"contracts/BEP20.sol\":10676:10697  walletLocked[_wallet] */\n      0x00\n        /* \"contracts/BEP20.sol\":10689:10696  _wallet */\n      dup4\n        /* \"contracts/BEP20.sol\":10676:10697  walletLocked[_wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BEP20.sol\":10676:10704  walletLocked[_wallet] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":10731:10738  _wallet */\n      dup1\n        /* \"contracts/BEP20.sol\":10720:10739  WalletLock(_wallet) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9349e03b539f2102cddd8a85d289548dac032b68b8b2b3b0530626b495a7e7f0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BEP20.sol\":10539:10747  function lockWallet(address _wallet) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":14173:14303  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_88:\n        /* \"contracts/BEP20.sol\":14247:14254  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":14270:14281  _allowances */\n      0x03\n        /* \"contracts/BEP20.sol\":14270:14288  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP20.sol\":14282:14287  owner */\n      dup5\n        /* \"contracts/BEP20.sol\":14270:14288  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":14270:14297  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP20.sol\":14289:14296  spender */\n      dup4\n        /* \"contracts/BEP20.sol\":14270:14297  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":14263:14297  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":14173:14303  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":11921:12024  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_91:\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      tag_166\n        /* \"contracts/BEP20.sol\":11248:11258  _msgSender */\n      tag_99\n        /* \"contracts/BEP20.sol\":11248:11260  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11244  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":11238:11260  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP20.sol\":11230:11297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/BEP20.sol\":11990:12018  _transferOwnership(newOwner) */\n      tag_169\n        /* \"contracts/BEP20.sol\":12009:12017  newOwner */\n      dup2\n        /* \"contracts/BEP20.sol\":11990:12008  _transferOwnership */\n      tag_170\n        /* \"contracts/BEP20.sol\":11990:12018  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/BEP20.sol\":11921:12024  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":3709:3801  function _msgSender() internal view returns (address payable) {\r... */\n    tag_99:\n        /* \"contracts/BEP20.sol\":3754:3769  address payable */\n      0x00\n        /* \"contracts/BEP20.sol\":3785:3795  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":3778:3795  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":3709:3801  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":19453:19773  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_100:\n        /* \"contracts/BEP20.sol\":19560:19561  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":19543:19562  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":19543:19548  owner */\n      dup4\n        /* \"contracts/BEP20.sol\":19543:19562  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20.sol\":19535:19603  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/BEP20.sol\":19637:19638  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":19618:19639  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":19618:19625  spender */\n      dup3\n        /* \"contracts/BEP20.sol\":19618:19639  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20.sol\":19610:19678  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/BEP20.sol\":19717:19723  amount */\n      dup1\n        /* \"contracts/BEP20.sol\":19687:19698  _allowances */\n      0x03\n        /* \"contracts/BEP20.sol\":19687:19705  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP20.sol\":19699:19704  owner */\n      dup6\n        /* \"contracts/BEP20.sol\":19687:19705  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":19687:19714  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP20.sol\":19706:19713  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":19687:19714  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":19687:19723  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":19751:19758  spender */\n      dup2\n        /* \"contracts/BEP20.sol\":19735:19767  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":19744:19749  owner */\n      dup4\n        /* \"contracts/BEP20.sol\":19735:19767  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/BEP20.sol\":19760:19766  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":19735:19767  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":19453:19773  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":17403:17852  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_109:\n        /* \"contracts/BEP20.sol\":17515:17516  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":17497:17517  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":17497:17503  sender */\n      dup4\n        /* \"contracts/BEP20.sol\":17497:17517  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20.sol\":17489:17559  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/BEP20.sol\":17595:17596  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":17574:17597  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":17574:17583  recipient */\n      dup3\n        /* \"contracts/BEP20.sol\":17574:17597  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20.sol\":17566:17637  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/BEP20.sol\":17666:17737  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_178\n        /* \"contracts/BEP20.sol\":17688:17694  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":17666:17737  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/BEP20.sol\":17666:17675  _balances */\n      0x02\n        /* \"contracts/BEP20.sol\":17666:17683  _balances[sender] */\n      0x00\n        /* \"contracts/BEP20.sol\":17676:17682  sender */\n      dup8\n        /* \"contracts/BEP20.sol\":17666:17683  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":17666:17687  _balances[sender].sub */\n      tag_114\n      swap1\n        /* \"contracts/BEP20.sol\":17666:17737  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/BEP20.sol\":17646:17655  _balances */\n      0x02\n        /* \"contracts/BEP20.sol\":17646:17663  _balances[sender] */\n      0x00\n        /* \"contracts/BEP20.sol\":17656:17662  sender */\n      dup6\n        /* \"contracts/BEP20.sol\":17646:17663  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":17646:17737  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":17767:17799  _balances[recipient].add(amount) */\n      tag_179\n        /* \"contracts/BEP20.sol\":17792:17798  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":17767:17776  _balances */\n      0x02\n        /* \"contracts/BEP20.sol\":17767:17787  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP20.sol\":17777:17786  recipient */\n      dup6\n        /* \"contracts/BEP20.sol\":17767:17787  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":17767:17791  _balances[recipient].add */\n      tag_121\n      swap1\n        /* \"contracts/BEP20.sol\":17767:17799  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/BEP20.sol\":17744:17753  _balances */\n      0x02\n        /* \"contracts/BEP20.sol\":17744:17764  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP20.sol\":17754:17763  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":17744:17764  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":17744:17799  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":17828:17837  recipient */\n      dup2\n        /* \"contracts/BEP20.sol\":17811:17846  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":17820:17826  sender */\n      dup4\n        /* \"contracts/BEP20.sol\":17811:17846  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP20.sol\":17839:17845  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":17811:17846  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":17403:17852  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":5668:5846  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_114:\n        /* \"contracts/BEP20.sol\":5754:5761  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":5783:5784  a */\n      dup4\n        /* \"contracts/BEP20.sol\":5778:5779  b */\n      dup4\n        /* \"contracts/BEP20.sol\":5778:5784  b <= a */\n      gt\n      iszero\n        /* \"contracts/BEP20.sol\":5786:5798  errorMessage */\n      dup3\n        /* \"contracts/BEP20.sol\":5770:5799  require(b <= a, errorMessage) */\n      swap1\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_182:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_184\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_182)\n    tag_184:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20.sol\":5770:5799  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_185\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_185:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n      pop\n        /* \"contracts/BEP20.sol\":5806:5815  uint256 c */\n      0x00\n        /* \"contracts/BEP20.sol\":5822:5823  b */\n      dup4\n        /* \"contracts/BEP20.sol\":5818:5819  a */\n      dup6\n        /* \"contracts/BEP20.sol\":5818:5823  a - b */\n      sub\n        /* \"contracts/BEP20.sol\":5806:5823  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":5839:5840  c */\n      dup1\n        /* \"contracts/BEP20.sol\":5832:5840  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/BEP20.sol\":5668:5846  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":4841:5008  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_121:\n        /* \"contracts/BEP20.sol\":4899:4906  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":4915:4924  uint256 c */\n      dup1\n        /* \"contracts/BEP20.sol\":4931:4932  b */\n      dup3\n        /* \"contracts/BEP20.sol\":4927:4928  a */\n      dup5\n        /* \"contracts/BEP20.sol\":4927:4932  a + b */\n      add\n        /* \"contracts/BEP20.sol\":4915:4932  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":4952:4953  a */\n      dup4\n        /* \"contracts/BEP20.sol\":4947:4948  c */\n      dup2\n        /* \"contracts/BEP20.sol\":4947:4953  c >= a */\n      lt\n      iszero\n        /* \"contracts/BEP20.sol\":4939:4985  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/BEP20.sol\":5001:5002  c */\n      dup1\n        /* \"contracts/BEP20.sol\":4994:5002  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/BEP20.sol\":4841:5008  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":18113:18403  function _mint(address account, uint256 amount) internal {\r... */\n    tag_145:\n        /* \"contracts/BEP20.sol\":18204:18205  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":18185:18206  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":18185:18192  account */\n      dup3\n        /* \"contracts/BEP20.sol\":18185:18206  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20.sol\":18177:18242  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/BEP20.sol\":18266:18290  _totalSupply.add(amount) */\n      tag_190\n        /* \"contracts/BEP20.sol\":18283:18289  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":18266:18278  _totalSupply */\n      sload(0x04)\n        /* \"contracts/BEP20.sol\":18266:18282  _totalSupply.add */\n      tag_121\n      swap1\n        /* \"contracts/BEP20.sol\":18266:18290  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/BEP20.sol\":18251:18263  _totalSupply */\n      0x04\n        /* \"contracts/BEP20.sol\":18251:18290  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":18318:18348  _balances[account].add(amount) */\n      tag_191\n        /* \"contracts/BEP20.sol\":18341:18347  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":18318:18327  _balances */\n      0x02\n        /* \"contracts/BEP20.sol\":18318:18336  _balances[account] */\n      0x00\n        /* \"contracts/BEP20.sol\":18328:18335  account */\n      dup6\n        /* \"contracts/BEP20.sol\":18318:18336  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":18318:18340  _balances[account].add */\n      tag_121\n      swap1\n        /* \"contracts/BEP20.sol\":18318:18348  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"contracts/BEP20.sol\":18297:18306  _balances */\n      0x02\n        /* \"contracts/BEP20.sol\":18297:18315  _balances[account] */\n      0x00\n        /* \"contracts/BEP20.sol\":18307:18314  account */\n      dup5\n        /* \"contracts/BEP20.sol\":18297:18315  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20.sol\":18297:18348  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":18381:18388  account */\n      dup2\n        /* \"contracts/BEP20.sol\":18360:18397  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":18377:18378  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":18360:18397  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP20.sol\":18390:18396  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":18360:18397  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":18113:18403  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":12122:12337  function _transferOwnership(address newOwner) internal {\r... */\n    tag_170:\n        /* \"contracts/BEP20.sol\":12212:12213  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":12192:12214  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":12192:12200  newOwner */\n      dup2\n        /* \"contracts/BEP20.sol\":12192:12214  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20.sol\":12184:12257  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/BEP20.sol\":12298:12306  newOwner */\n      dup1\n        /* \"contracts/BEP20.sol\":12269:12307  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":12290:12296  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20.sol\":12269:12307  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":12323:12331  newOwner */\n      dup1\n        /* \"contracts/BEP20.sol\":12314:12320  _owner */\n      0x00\n      dup1\n        /* \"contracts/BEP20.sol\":12314:12331  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20.sol\":12122:12337  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a7231582010037fbe7e3d2a91e09cec38908c6a203e66f01fb4718dedda715046be5bc25a64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200023d60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600c81526020017f496d4d6574615472616465720000000000000000000000000000000000000000815250600790805190602001906200010f92919062000245565b506040518060400160405280600481526020017f494d4d5400000000000000000000000000000000000000000000000000000000815250600690805190602001906200015d92919062000245565b506008600560006101000a81548160ff021916908360ff160217905550670de0b6b3a7640000600481905550600454600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6004546040518082815260200191505060405180910390a3620002f4565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028857805160ff1916838001178555620002b9565b82800160010185558215620002b9579182015b82811115620002b85782518255916020019190600101906200029b565b5b509050620002c89190620002cc565b5090565b620002f191905b80821115620002ed576000816000905550600101620002d3565b5090565b90565b61220880620003046000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063893d20e8116100b8578063a457c2d71161007c578063a457c2d7146105e9578063a9059cbb1461064f578063bca7a9e2146106b5578063cd808d94146106bf578063dd62ed3e14610703578063f2fde38b1461077b57610142565b8063893d20e8146104305780638da5cb5b1461047a5780638fe10615146104c457806395d89b4114610520578063a0712d68146105a357610142565b8063313ce5671161010a578063313ce567146102de57806339509351146103025780633e0f974c146103685780636a630559146103ac57806370a08231146103ce578063715018a61461042657610142565b806306fdde0314610147578063095ea7b3146101ca57806318160ddd1461023057806318a24b5b1461024e57806323b872dd14610258575b600080fd5b61014f6107bf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018f578082015181840152602081019050610174565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610216600480360360408110156101e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610861565b604051808215151515815260200191505060405180910390f35b61023861087f565b6040518082815260200191505060405180910390f35b610256610889565b005b6102c46004803603606081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a1c565b604051808215151515815260200191505060405180910390f35b6102e6610af5565b604051808260ff1660ff16815260200191505060405180910390f35b61034e6004803603604081101561031857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b0c565b604051808215151515815260200191505060405180910390f35b6103aa6004803603602081101561037e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bbf565b005b6103b4610de5565b604051808215151515815260200191505060405180910390f35b610410600480360360208110156103e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610df8565b6040518082815260200191505060405180910390f35b61042e610e41565b005b610438610fc9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610482610fd8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610506600480360360208110156104da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611001565b604051808215151515815260200191505060405180910390f35b610528611021565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561056857808201518184015260208101905061054d565b50505050905090810190601f1680156105955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105cf600480360360208110156105b957600080fd5b81019080803590602001909291905050506110c3565b604051808215151515815260200191505060405180910390f35b610635600480360360408110156105ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111a8565b604051808215151515815260200191505060405180910390f35b61069b6004803603604081101561066557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611275565b604051808215151515815260200191505060405180910390f35b6106bd611293565b005b610701600480360360208110156106d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611428565b005b6107656004803603604081101561071957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061164e565b6040518082815260200191505060405180910390f35b6107bd6004803603602081101561079157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116d5565b005b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108575780601f1061082c57610100808354040283529160200191610857565b820191906000526020600020905b81548152906001019060200180831161083a57829003601f168201915b5050505050905090565b600061087561086e6117aa565b84846117b2565b6001905092915050565b6000600454905090565b6108916117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610952576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff166109d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f546f6b656e20697320616c726561647920756e6c6f636b65640000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f3ebb0e684af63268f35c843a72f657183e7a0786fb939148605b0262343b445060405160405180910390a1565b6000610a298484846119a9565b610aea84610a356117aa565b610ae58560405180606001604052806028815260200161211c60289139600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a9b6117aa565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c639092919063ffffffff16565b6117b2565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000610bb5610b196117aa565b84610bb08560036000610b2a6117aa565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2390919063ffffffff16565b6117b2565b6001905092915050565b610bc76117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610d47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f57616c6c657420697320616c726561647920756e6c6f636b656400000000000081525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f5185e00b6ef8de975b632ca028d85781bd6da04dbdda5047c5e595aa7b74713760405160405180910390a250565b600060149054906101000a900460ff1681565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610e496117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610fd3610fd8565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900460ff1681565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110b95780601f1061108e576101008083540402835291602001916110b9565b820191906000526020600020905b81548152906001019060200180831161109c57829003601f168201915b5050505050905090565b60006110cd6117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461118e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61119f6111996117aa565b83611dab565b60019050919050565b600061126b6111b56117aa565b846112668560405180606001604052806025815260200161218d60259139600360006111df6117aa565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c639092919063ffffffff16565b6117b2565b6001905092915050565b60006112896112826117aa565b84846119a9565b6001905092915050565b61129b6117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461135c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff16156113df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f546f6b656e20697320616c7265616479206c6f636b656400000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f4470ec49ae79dedf38de6cfeea4279d5ea6b681c2aa4c404b2f7e1778bd2228060405160405180910390a1565b6114306117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156115b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f57616c6c657420697320616c7265616479206c6f636b6564000000000000000081525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f9349e03b539f2102cddd8a85d289548dac032b68b8b2b3b0530626b495a7e7f060405160405180910390a250565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6116dd6117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461179e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6117a781611f68565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611838576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806120d26024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806121b26022913960400191505060405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a2f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806120ad6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ab5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061216a6023913960400191505060405180910390fd5b611b218160405180606001604052806026815260200161214460269139600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c639092919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611bb681600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2390919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611d10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611cd5578082015181840152602081019050611cba565b50505050905090810190601f168015611d025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611da1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611e6381600454611d2390919063ffffffff16565b600481905550611ebb81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2390919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806120f66026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582010037fbe7e3d2a91e09cec38908c6a203e66f01fb4718dedda715046be5bc25a64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x23D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496D4D6574615472616465720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x245 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494D4D5400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x245 JUMP JUMPDEST POP PUSH1 0x8 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x288 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2B9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2B9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2C8 SWAP2 SWAP1 PUSH3 0x2CC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F1 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2ED JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2208 DUP1 PUSH3 0x304 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xBCA7A9E2 EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xCD808D94 EQ PUSH2 0x6BF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x77B JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x8FE10615 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x5A3 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x3E0F974C EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x6A630559 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x426 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x18A24B5B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x258 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x174 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x889 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBBF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH2 0xE41 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x482 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x528 PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x568 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x54D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x635 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BD PUSH2 0x1293 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x701 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1428 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x765 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16D5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x857 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x857 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x875 PUSH2 0x86E PUSH2 0x17AA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x891 PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E20697320616C726561647920756E6C6F636B656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x3EBB0E684AF63268F35C843A72F657183E7A0786FB939148605B0262343B4450 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 DUP5 DUP5 DUP5 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0xAEA DUP5 PUSH2 0xA35 PUSH2 0x17AA JUMP JUMPDEST PUSH2 0xAE5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x211C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xA9B PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 PUSH2 0xB19 PUSH2 0x17AA JUMP JUMPDEST DUP5 PUSH2 0xBB0 DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0xB2A PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC7 PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x57616C6C657420697320616C726561647920756E6C6F636B6564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5185E00B6EF8DE975B632CA028D85781BD6DA04DBDDA5047C5E595AA7B747137 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE49 PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD3 PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x10B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x108E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x109C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CD PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x119F PUSH2 0x1199 PUSH2 0x17AA JUMP JUMPDEST DUP4 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126B PUSH2 0x11B5 PUSH2 0x17AA JUMP JUMPDEST DUP5 PUSH2 0x1266 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0x11DF PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1289 PUSH2 0x1282 PUSH2 0x17AA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x19A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x129B PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x135C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E20697320616C7265616479206C6F636B6564000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x4470EC49AE79DEDF38DE6CFEEA4279D5EA6B681C2AA4C404B2F7E1778BD22280 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1430 PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x57616C6C657420697320616C7265616479206C6F636B65640000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9349E03B539F2102CDDD8A85D289548DAC032B68B8B2B3B0530626B495A7E7F0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DD PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x179E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A7 DUP2 PUSH2 0x1F68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20D2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21B2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20AD PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x216A PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2144 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1BB6 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1D10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CD5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CBA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E63 DUP2 PUSH1 0x4 SLOAD PUSH2 0x1D23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1EBB DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20F6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582010037FBE7E3D2A SWAP2 0xE0 SWAP13 0xEC CODESIZE SWAP1 DUP13 PUSH11 0x203E66F01FB4718DEDDA71 POP CHAINID 0xBE JUMPDEST 0xC2 GAS PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "12344:7832:0:-;;;12676:243;8:9:-1;5:2;;;30:1;27;20:12;5:2;12676:243:0;9978:17;9998:12;:10;;;:12;;:::i;:::-;9978:32;;10026:9;10017:6;;:18;;;;;;;;;;;;;;;;;;10080:9;10047:43;;10076:1;10047:43;;;;;;;;;;;;9947:149;12704:22;;;;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;:::i;:::-;;12733:16;;;;;;;;;;;;;;;;;:7;:16;;;;;;;;;;;;:::i;:::-;;12768:1;12756:9;;:13;;;;;;;;;;;;;;;;;;12791:19;12776:12;:34;;;;12841:12;;12817:9;:21;12827:10;12817:21;;;;;;;;;;;;;;;:36;;;;12888:10;12867:46;;12884:1;12867:46;;;12900:12;;12867:46;;;;;;;;;;;;;;;;;;12344:7832;;3709:92;3754:15;3785:10;3778:17;;3709:92;:::o;12344:7832::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c8063893d20e8116100b8578063a457c2d71161007c578063a457c2d7146105e9578063a9059cbb1461064f578063bca7a9e2146106b5578063cd808d94146106bf578063dd62ed3e14610703578063f2fde38b1461077b57610142565b8063893d20e8146104305780638da5cb5b1461047a5780638fe10615146104c457806395d89b4114610520578063a0712d68146105a357610142565b8063313ce5671161010a578063313ce567146102de57806339509351146103025780633e0f974c146103685780636a630559146103ac57806370a08231146103ce578063715018a61461042657610142565b806306fdde0314610147578063095ea7b3146101ca57806318160ddd1461023057806318a24b5b1461024e57806323b872dd14610258575b600080fd5b61014f6107bf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018f578082015181840152602081019050610174565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610216600480360360408110156101e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610861565b604051808215151515815260200191505060405180910390f35b61023861087f565b6040518082815260200191505060405180910390f35b610256610889565b005b6102c46004803603606081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a1c565b604051808215151515815260200191505060405180910390f35b6102e6610af5565b604051808260ff1660ff16815260200191505060405180910390f35b61034e6004803603604081101561031857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b0c565b604051808215151515815260200191505060405180910390f35b6103aa6004803603602081101561037e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bbf565b005b6103b4610de5565b604051808215151515815260200191505060405180910390f35b610410600480360360208110156103e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610df8565b6040518082815260200191505060405180910390f35b61042e610e41565b005b610438610fc9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610482610fd8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610506600480360360208110156104da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611001565b604051808215151515815260200191505060405180910390f35b610528611021565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561056857808201518184015260208101905061054d565b50505050905090810190601f1680156105955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105cf600480360360208110156105b957600080fd5b81019080803590602001909291905050506110c3565b604051808215151515815260200191505060405180910390f35b610635600480360360408110156105ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111a8565b604051808215151515815260200191505060405180910390f35b61069b6004803603604081101561066557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611275565b604051808215151515815260200191505060405180910390f35b6106bd611293565b005b610701600480360360208110156106d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611428565b005b6107656004803603604081101561071957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061164e565b6040518082815260200191505060405180910390f35b6107bd6004803603602081101561079157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116d5565b005b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108575780601f1061082c57610100808354040283529160200191610857565b820191906000526020600020905b81548152906001019060200180831161083a57829003601f168201915b5050505050905090565b600061087561086e6117aa565b84846117b2565b6001905092915050565b6000600454905090565b6108916117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610952576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff166109d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f546f6b656e20697320616c726561647920756e6c6f636b65640000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f3ebb0e684af63268f35c843a72f657183e7a0786fb939148605b0262343b445060405160405180910390a1565b6000610a298484846119a9565b610aea84610a356117aa565b610ae58560405180606001604052806028815260200161211c60289139600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a9b6117aa565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c639092919063ffffffff16565b6117b2565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000610bb5610b196117aa565b84610bb08560036000610b2a6117aa565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2390919063ffffffff16565b6117b2565b6001905092915050565b610bc76117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610d47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f57616c6c657420697320616c726561647920756e6c6f636b656400000000000081525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f5185e00b6ef8de975b632ca028d85781bd6da04dbdda5047c5e595aa7b74713760405160405180910390a250565b600060149054906101000a900460ff1681565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610e496117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610fd3610fd8565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900460ff1681565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110b95780601f1061108e576101008083540402835291602001916110b9565b820191906000526020600020905b81548152906001019060200180831161109c57829003601f168201915b5050505050905090565b60006110cd6117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461118e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61119f6111996117aa565b83611dab565b60019050919050565b600061126b6111b56117aa565b846112668560405180606001604052806025815260200161218d60259139600360006111df6117aa565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c639092919063ffffffff16565b6117b2565b6001905092915050565b60006112896112826117aa565b84846119a9565b6001905092915050565b61129b6117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461135c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff16156113df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f546f6b656e20697320616c7265616479206c6f636b656400000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f4470ec49ae79dedf38de6cfeea4279d5ea6b681c2aa4c404b2f7e1778bd2228060405160405180910390a1565b6114306117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156115b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f57616c6c657420697320616c7265616479206c6f636b6564000000000000000081525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f9349e03b539f2102cddd8a85d289548dac032b68b8b2b3b0530626b495a7e7f060405160405180910390a250565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6116dd6117aa565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461179e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6117a781611f68565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611838576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806120d26024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806121b26022913960400191505060405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a2f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806120ad6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ab5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061216a6023913960400191505060405180910390fd5b611b218160405180606001604052806026815260200161214460269139600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c639092919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611bb681600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2390919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611d10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611cd5578082015181840152602081019050611cba565b50505050905090810190601f168015611d025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611da1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611e6381600454611d2390919063ffffffff16565b600481905550611ebb81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2390919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806120f66026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582010037fbe7e3d2a91e09cec38908c6a203e66f01fb4718dedda715046be5bc25a64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xBCA7A9E2 EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xCD808D94 EQ PUSH2 0x6BF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x77B JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x8FE10615 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x5A3 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x3E0F974C EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x6A630559 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x426 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x18A24B5B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x258 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x174 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x889 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBBF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH2 0xE41 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x482 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x528 PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x568 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x54D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x635 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BD PUSH2 0x1293 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x701 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1428 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x765 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16D5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x857 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x857 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x875 PUSH2 0x86E PUSH2 0x17AA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x891 PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E20697320616C726561647920756E6C6F636B656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x3EBB0E684AF63268F35C843A72F657183E7A0786FB939148605B0262343B4450 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA29 DUP5 DUP5 DUP5 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0xAEA DUP5 PUSH2 0xA35 PUSH2 0x17AA JUMP JUMPDEST PUSH2 0xAE5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x211C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xA9B PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 PUSH2 0xB19 PUSH2 0x17AA JUMP JUMPDEST DUP5 PUSH2 0xBB0 DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0xB2A PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC7 PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x57616C6C657420697320616C726561647920756E6C6F636B6564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5185E00B6EF8DE975B632CA028D85781BD6DA04DBDDA5047C5E595AA7B747137 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE49 PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD3 PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x10B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x108E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x109C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CD PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x119F PUSH2 0x1199 PUSH2 0x17AA JUMP JUMPDEST DUP4 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126B PUSH2 0x11B5 PUSH2 0x17AA JUMP JUMPDEST DUP5 PUSH2 0x1266 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x218D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0x11DF PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1289 PUSH2 0x1282 PUSH2 0x17AA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x19A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x129B PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x135C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F6B656E20697320616C7265616479206C6F636B6564000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x4470EC49AE79DEDF38DE6CFEEA4279D5EA6B681C2AA4C404B2F7E1778BD22280 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1430 PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x57616C6C657420697320616C7265616479206C6F636B65640000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9349E03B539F2102CDDD8A85D289548DAC032B68B8B2B3B0530626B495A7E7F0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DD PUSH2 0x17AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x179E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A7 DUP2 PUSH2 0x1F68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20D2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21B2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20AD PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x216A PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2144 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1BB6 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1D10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CD5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CBA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E63 DUP2 PUSH1 0x4 SLOAD PUSH2 0x1D23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1EBB DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D23 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20F6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582010037FBE7E3D2A SWAP2 0xE0 SWAP13 0xEC CODESIZE SWAP1 DUP13 PUSH11 0x203E66F01FB4718DEDDA71 POP CHAINID 0xBE JUMPDEST 0xC2 GAS PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "12344:7832:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12344:7832:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13393:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13393:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14433:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14433:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13528:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10362:169;;;:::i;:::-;;15022:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15022:292:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13121:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15700:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15700:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10755:214;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10755:214:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;10106:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13669:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13669:106:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11646:130;;;:::i;:::-;;12983:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11044:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10136:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10136:44:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13257:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13257:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16823:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16823:120:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16372:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16372:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13969:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13969:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10191:163;;;:::i;:::-;;10539:208;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10539:208:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;14173:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14173:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11921:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11921:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;13393:79;13432:13;13461:5;13454:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13393:79;:::o;14433:144::-;14501:4;14514:39;14523:12;:10;:12::i;:::-;14537:7;14546:6;14514:8;:39::i;:::-;14567:4;14560:11;;14433:144;;;;:::o;13528:87::-;13574:7;13597:12;;13590:19;;13528:87;:::o;10362:169::-;11248:12;:10;:12::i;:::-;11238:22;;:6;;;;;;;;;;;:22;;;11230:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10423:11;;;;;;;;;;;10415:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10489:5;10475:11;;:19;;;;;;;;;;;;;;;;;;10510:13;;;;;;;;;;10362:169::o;15022:292::-;15113:4;15126:36;15136:6;15144:9;15155:6;15126:9;:36::i;:::-;15169:121;15178:6;15186:12;:10;:12::i;:::-;15200:89;15238:6;15200:89;;;;;;;;;;;;;;;;;:11;:19;15212:6;15200:19;;;;;;;;;;;;;;;:33;15220:12;:10;:12::i;:::-;15200:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;15169:8;:121::i;:::-;15304:4;15297:11;;15022:292;;;;;:::o;13121:79::-;13164:5;13185:9;;;;;;;;;;;13178:16;;13121:79;:::o;15700:200::-;15780:4;15793:83;15802:12;:10;:12::i;:::-;15816:7;15825:50;15864:10;15825:11;:25;15837:12;:10;:12::i;:::-;15825:25;;;;;;;;;;;;;;;:34;15851:7;15825:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;15793:8;:83::i;:::-;15890:4;15883:11;;15700:200;;;;:::o;10755:214::-;11248:12;:10;:12::i;:::-;11238:22;;:6;;;;;;;;;;;:22;;;11230:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10832:12;:21;10845:7;10832:21;;;;;;;;;;;;;;;;;;;;;;;;;10824:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10919:5;10895:12;:21;10908:7;10895:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;10953:7;10940:21;;;;;;;;;;;;10755:214;:::o;10106:23::-;;;;;;;;;;;;;:::o;13669:106::-;13728:7;13751:9;:18;13761:7;13751:18;;;;;;;;;;;;;;;;13744:25;;13669:106;;;:::o;11646:130::-;11248:12;:10;:12::i;:::-;11238:22;;:6;;;;;;;;;;;:22;;;11230:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11741:1;11704:40;;11725:6;;;;;;;;;;;11704:40;;;;;;;;;;;;11768:1;11751:6;;:19;;;;;;;;;;;;;;;;;;11646:130::o;12983:79::-;13026:7;13049;:5;:7::i;:::-;13042:14;;12983:79;:::o;11044:73::-;11082:7;11105:6;;;;;;;;;;;11098:13;;11044:73;:::o;10136:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;13257:83::-;13298:13;13327:7;13320:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13257:83;:::o;16823:120::-;16879:4;11248:12;:10;:12::i;:::-;11238:22;;:6;;;;;;;;;;;:22;;;11230:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16892:27;16898:12;:10;:12::i;:::-;16912:6;16892:5;:27::i;:::-;16933:4;16926:11;;16823:120;;;:::o;16372:251::-;16457:4;16470:129;16479:12;:10;:12::i;:::-;16493:7;16502:96;16541:15;16502:96;;;;;;;;;;;;;;;;;:11;:25;16514:12;:10;:12::i;:::-;16502:25;;;;;;;;;;;;;;;:34;16528:7;16502:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;16470:8;:129::i;:::-;16613:4;16606:11;;16372:251;;;;:::o;13969:150::-;14040:4;14053:42;14063:12;:10;:12::i;:::-;14077:9;14088:6;14053:9;:42::i;:::-;14109:4;14102:11;;13969:150;;;;:::o;10191:163::-;11248:12;:10;:12::i;:::-;11238:22;;:6;;;;;;;;;;;:22;;;11230:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10251:11;;;;;;;;;;;10250:12;10242:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10315:4;10301:11;;:18;;;;;;;;;;;;;;;;;;10335:11;;;;;;;;;;10191:163::o;10539:208::-;11248:12;:10;:12::i;:::-;11238:22;;:6;;;;;;;;;;;:22;;;11230:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10615:12;:21;10628:7;10615:21;;;;;;;;;;;;;;;;;;;;;;;;;10614:22;10606:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10700:4;10676:12;:21;10689:7;10676:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;10731:7;10720:19;;;;;;;;;;;;10539:208;:::o;14173:130::-;14247:7;14270:11;:18;14282:5;14270:18;;;;;;;;;;;;;;;:27;14289:7;14270:27;;;;;;;;;;;;;;;;14263:34;;14173:130;;;;:::o;11921:103::-;11248:12;:10;:12::i;:::-;11238:22;;:6;;;;;;;;;;;:22;;;11230:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11990:28;12009:8;11990:18;:28::i;:::-;11921:103;:::o;3709:92::-;3754:15;3785:10;3778:17;;3709:92;:::o;19453:320::-;19560:1;19543:19;;:5;:19;;;;19535:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19637:1;19618:21;;:7;:21;;;;19610:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19717:6;19687:11;:18;19699:5;19687:18;;;;;;;;;;;;;;;:27;19706:7;19687:27;;;;;;;;;;;;;;;:36;;;;19751:7;19735:32;;19744:5;19735:32;;;19760:6;19735:32;;;;;;;;;;;;;;;;;;19453:320;;;:::o;17403:449::-;17515:1;17497:20;;:6;:20;;;;17489:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17595:1;17574:23;;:9;:23;;;;17566:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17666;17688:6;17666:71;;;;;;;;;;;;;;;;;:9;:17;17676:6;17666:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;17646:9;:17;17656:6;17646:17;;;;;;;;;;;;;;;:91;;;;17767:32;17792:6;17767:9;:20;17777:9;17767:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;17744:9;:20;17754:9;17744:20;;;;;;;;;;;;;;;:55;;;;17828:9;17811:35;;17820:6;17811:35;;;17839:6;17811:35;;;;;;;;;;;;;;;;;;17403:449;;;:::o;5668:178::-;5754:7;5783:1;5778;:6;;5786:12;5770:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5770:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5806:9;5822:1;5818;:5;5806:17;;5839:1;5832:8;;;5668:178;;;;;:::o;4841:167::-;4899:7;4915:9;4931:1;4927;:5;4915:17;;4952:1;4947;:6;;4939:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5001:1;4994:8;;;4841:167;;;;:::o;18113:290::-;18204:1;18185:21;;:7;:21;;;;18177:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18266:24;18283:6;18266:12;;:16;;:24;;;;:::i;:::-;18251:12;:39;;;;18318:30;18341:6;18318:9;:18;18328:7;18318:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;18297:9;:18;18307:7;18297:18;;;;;;;;;;;;;;;:51;;;;18381:7;18360:37;;18377:1;18360:37;;;18390:6;18360:37;;;;;;;;;;;;;;;;;;18113:290;;:::o;12122:215::-;12212:1;12192:22;;:8;:22;;;;12184:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12298:8;12269:38;;12290:6;;;;;;;;;;;12269:38;;;;;;;;;;;;12323:8;12314:6;;:17;;;;;;;;;;;;;;;;;;12122:215;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1742400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1307",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"lockToken()": "23715",
								"lockWallet(address)": "24291",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24430",
								"symbol()": "infinite",
								"tokenLocked()": "1192",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unlockToken()": "23736",
								"unlockWallet(address)": "24267",
								"walletLocked(address)": "1273"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "MSTORE"
								},
								{
									"begin": 12676,
									"end": 12919,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 12676,
									"end": 12919,
									"name": "POP"
								},
								{
									"begin": 9978,
									"end": 9995,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9998,
									"end": 10010,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9998,
									"end": 10008,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9998,
									"end": 10008,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9998,
									"end": 10008,
									"name": "SHL"
								},
								{
									"begin": 9998,
									"end": 10010,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9998,
									"end": 10010,
									"name": "SHR"
								},
								{
									"begin": 9998,
									"end": 10010,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9998,
									"end": 10010,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9998,
									"end": 10010,
									"name": "JUMPDEST"
								},
								{
									"begin": 9978,
									"end": 10010,
									"name": "SWAP1"
								},
								{
									"begin": 9978,
									"end": 10010,
									"name": "POP"
								},
								{
									"begin": 10026,
									"end": 10035,
									"name": "DUP1"
								},
								{
									"begin": 10017,
									"end": 10023,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10017,
									"end": 10023,
									"name": "DUP1"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "EXP"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "DUP2"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "SLOAD"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "DUP2"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "MUL"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "NOT"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "AND"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "SWAP1"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "DUP4"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "AND"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "MUL"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "OR"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "SWAP1"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "SSTORE"
								},
								{
									"begin": 10017,
									"end": 10035,
									"name": "POP"
								},
								{
									"begin": 10080,
									"end": 10089,
									"name": "DUP1"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "AND"
								},
								{
									"begin": 10076,
									"end": 10077,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "AND"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "MLOAD"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "MLOAD"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "DUP1"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "SWAP2"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "SUB"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "SWAP1"
								},
								{
									"begin": 10047,
									"end": 10090,
									"name": "LOG3"
								},
								{
									"begin": 9947,
									"end": 10096,
									"name": "POP"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "MLOAD"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "DUP1"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "ADD"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "MSTORE"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "DUP1"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "DUP2"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "MSTORE"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "ADD"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "PUSH",
									"value": "496D4D6574615472616465720000000000000000000000000000000000000000"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "DUP2"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "MSTORE"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "POP"
								},
								{
									"begin": 12704,
									"end": 12709,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "SWAP1"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "DUP1"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "MLOAD"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "SWAP1"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "ADD"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "SWAP1"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "SWAP3"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "SWAP2"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "SWAP1"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "JUMPDEST"
								},
								{
									"begin": 12704,
									"end": 12726,
									"name": "POP"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "MLOAD"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "DUP1"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "ADD"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "MSTORE"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "DUP1"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "DUP2"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "MSTORE"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "ADD"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "PUSH",
									"value": "494D4D5400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "DUP2"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "MSTORE"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "POP"
								},
								{
									"begin": 12733,
									"end": 12740,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "SWAP1"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "DUP1"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "MLOAD"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "SWAP1"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "ADD"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "SWAP1"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "SWAP3"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "SWAP2"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "SWAP1"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "JUMPDEST"
								},
								{
									"begin": 12733,
									"end": 12749,
									"name": "POP"
								},
								{
									"begin": 12768,
									"end": 12769,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 12756,
									"end": 12765,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 12756,
									"end": 12765,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "EXP"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "DUP2"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "SLOAD"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "DUP2"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "MUL"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "NOT"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "AND"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "SWAP1"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "DUP4"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "AND"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "MUL"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "OR"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "SWAP1"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "SSTORE"
								},
								{
									"begin": 12756,
									"end": 12769,
									"name": "POP"
								},
								{
									"begin": 12791,
									"end": 12810,
									"name": "PUSH",
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 12776,
									"end": 12788,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 12776,
									"end": 12810,
									"name": "DUP2"
								},
								{
									"begin": 12776,
									"end": 12810,
									"name": "SWAP1"
								},
								{
									"begin": 12776,
									"end": 12810,
									"name": "SSTORE"
								},
								{
									"begin": 12776,
									"end": 12810,
									"name": "POP"
								},
								{
									"begin": 12841,
									"end": 12853,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 12841,
									"end": 12853,
									"name": "SLOAD"
								},
								{
									"begin": 12817,
									"end": 12826,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12827,
									"end": 12837,
									"name": "CALLER"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "AND"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "AND"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "DUP2"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "MSTORE"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "ADD"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "SWAP1"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "DUP2"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "MSTORE"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "ADD"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12817,
									"end": 12838,
									"name": "KECCAK256"
								},
								{
									"begin": 12817,
									"end": 12853,
									"name": "DUP2"
								},
								{
									"begin": 12817,
									"end": 12853,
									"name": "SWAP1"
								},
								{
									"begin": 12817,
									"end": 12853,
									"name": "SSTORE"
								},
								{
									"begin": 12817,
									"end": 12853,
									"name": "POP"
								},
								{
									"begin": 12888,
									"end": 12898,
									"name": "CALLER"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "AND"
								},
								{
									"begin": 12884,
									"end": 12885,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "AND"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 12900,
									"end": 12912,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 12900,
									"end": 12912,
									"name": "SLOAD"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "MLOAD"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "DUP1"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "DUP3"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "DUP2"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "MSTORE"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "ADD"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "SWAP2"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "POP"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "POP"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "MLOAD"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "DUP1"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "SWAP2"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "SUB"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "SWAP1"
								},
								{
									"begin": 12867,
									"end": 12913,
									"name": "LOG3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMP"
								},
								{
									"begin": 3709,
									"end": 3801,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3709,
									"end": 3801,
									"name": "JUMPDEST"
								},
								{
									"begin": 3754,
									"end": 3769,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3795,
									"name": "CALLER"
								},
								{
									"begin": 3778,
									"end": 3795,
									"name": "SWAP1"
								},
								{
									"begin": 3778,
									"end": 3795,
									"name": "POP"
								},
								{
									"begin": 3709,
									"end": 3801,
									"name": "SWAP1"
								},
								{
									"begin": 3709,
									"end": 3801,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SLOAD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "AND"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ISZERO"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "MUL"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SUB"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "AND"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DIV"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "MSTORE"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "KECCAK256"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ADD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DIV"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ADD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "LT"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPI"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "MLOAD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "NOT"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "AND"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP4"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ADD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "OR"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP6"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SSTORE"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMP"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ADD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ADD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP6"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SSTORE"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ISZERO"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPI"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ADD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "GT"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ISZERO"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPI"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "MLOAD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SSTORE"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ADD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ADD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMP"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "POP"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "POP"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "POP"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP3"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "GT"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ISZERO"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPI"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP2"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SSTORE"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "POP"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "ADD"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMP"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "POP"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMP"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "SWAP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "JUMPDEST"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "DUP1"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "CODECOPY"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12344,
									"end": 20176,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582010037fbe7e3d2a91e09cec38908c6a203e66f01fb4718dedda715046be5bc25a64736f6c63430005100032",
									".code": [
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "MSTORE"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "POP"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "LT"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "SHR"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "GT"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "GT"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "BCA7A9E2"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "CD808D94"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMP"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPDEST"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "8FE10615"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMP"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPDEST"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "GT"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "3E0F974C"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "6A630559"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMP"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPDEST"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "18A24B5B"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "EQ"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPI"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "JUMPDEST"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "DUP1"
										},
										{
											"begin": 12344,
											"end": 20176,
											"name": "REVERT"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "MLOAD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "ADD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP3"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP2"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SUB"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP3"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "MSTORE"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP4"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP2"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP2"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "MLOAD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP2"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "MSTORE"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "ADD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP2"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "MLOAD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "ADD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP4"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP2"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "ADD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "AND"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "ISZERO"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP3"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SUB"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "MLOAD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP4"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SUB"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "EXP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SUB"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "NOT"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "AND"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP2"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "MSTORE"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "ADD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP2"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP3"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "MLOAD"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP2"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SUB"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "RETURN"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "JUMPDEST"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "DUP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "DUP2"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "ADD"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "DUP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "DUP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "AND"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "ADD"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP3"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP2"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "DUP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "ADD"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP3"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP2"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "POP"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "POP"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "POP"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "JUMPDEST"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "MLOAD"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "DUP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "DUP3"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "ISZERO"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "ISZERO"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "ISZERO"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "ISZERO"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "DUP2"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "MSTORE"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "ADD"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP2"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "POP"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "POP"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "MLOAD"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "DUP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP2"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SUB"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP1"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "RETURN"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "JUMPDEST"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "JUMPDEST"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "MLOAD"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "DUP1"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "DUP3"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "DUP2"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "MSTORE"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "ADD"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "SWAP2"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "POP"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "POP"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "MLOAD"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "DUP1"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "SWAP2"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "SUB"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "SWAP1"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "RETURN"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "JUMPDEST"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "JUMPDEST"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "STOP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "JUMPDEST"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP2"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "ADD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "AND"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "ADD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP3"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP2"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "AND"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "ADD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP3"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP2"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "ADD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP3"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP2"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "POP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "POP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "POP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "JUMPDEST"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "MLOAD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP3"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "ISZERO"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "ISZERO"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "ISZERO"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "ISZERO"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP2"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "MSTORE"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "ADD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP2"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "POP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "POP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "MLOAD"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "DUP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP2"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SUB"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP1"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "RETURN"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "JUMPDEST"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "JUMPDEST"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "MLOAD"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "DUP1"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "DUP3"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "AND"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "AND"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "DUP2"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "MSTORE"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "ADD"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "SWAP2"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "POP"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "POP"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "MLOAD"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "DUP1"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "SWAP2"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "SUB"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "SWAP1"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "RETURN"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "JUMPDEST"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "DUP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "DUP2"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "ADD"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "DUP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "DUP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "AND"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "ADD"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP3"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP2"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "DUP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "ADD"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP3"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP2"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "POP"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "POP"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "POP"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "JUMPDEST"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "MLOAD"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "DUP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "DUP3"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "ISZERO"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "ISZERO"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "ISZERO"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "ISZERO"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "DUP2"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "MSTORE"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "ADD"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP2"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "POP"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "POP"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "MLOAD"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "DUP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP2"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SUB"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP1"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "RETURN"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "JUMPDEST"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "DUP1"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "DUP2"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "ADD"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "SWAP1"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "DUP1"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "DUP1"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "AND"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "SWAP1"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "ADD"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "SWAP1"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "SWAP3"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "SWAP2"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "SWAP1"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "POP"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "POP"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "POP"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "JUMPDEST"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "STOP"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "JUMPDEST"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "JUMPDEST"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "MLOAD"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "DUP1"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "DUP3"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "ISZERO"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "ISZERO"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "ISZERO"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "ISZERO"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "DUP2"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "MSTORE"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "ADD"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "SWAP2"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "POP"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "POP"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "MLOAD"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "DUP1"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "SWAP2"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "SUB"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "SWAP1"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "RETURN"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "JUMPDEST"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "DUP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "DUP2"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "ADD"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "DUP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "DUP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "AND"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "ADD"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP3"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP2"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "JUMPDEST"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "MLOAD"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "DUP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "DUP3"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "DUP2"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "MSTORE"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "ADD"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP2"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "MLOAD"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "DUP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP2"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SUB"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "RETURN"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "JUMPDEST"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "JUMPDEST"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "STOP"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "JUMPDEST"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "JUMPDEST"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "MLOAD"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "DUP1"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "DUP3"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "AND"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "AND"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "DUP2"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "MSTORE"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "ADD"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "SWAP2"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "POP"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "POP"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "MLOAD"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "DUP1"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "SWAP2"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "SUB"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "SWAP1"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "RETURN"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "JUMPDEST"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "JUMPDEST"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "MLOAD"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "DUP1"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "DUP3"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "AND"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "AND"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "DUP2"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "MSTORE"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "ADD"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "SWAP2"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "POP"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "POP"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "MLOAD"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "DUP1"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "SWAP2"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "SUB"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "SWAP1"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "RETURN"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "JUMPDEST"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP2"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "ADD"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "AND"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "ADD"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP3"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP2"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "JUMPDEST"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "MLOAD"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP3"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "ISZERO"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "ISZERO"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "ISZERO"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "ISZERO"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP2"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "MSTORE"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "ADD"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP2"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "MLOAD"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP2"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SUB"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "RETURN"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "JUMPDEST"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "JUMPDEST"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "MLOAD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "ADD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP3"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SUB"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP3"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "MSTORE"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP4"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "MLOAD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "MSTORE"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "ADD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP2"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "MLOAD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "ADD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP4"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "ADD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "AND"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "ISZERO"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "JUMPI"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP3"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SUB"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "MLOAD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP4"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SUB"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "EXP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SUB"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "NOT"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "AND"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "MSTORE"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "ADD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP2"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "JUMPDEST"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP3"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "MLOAD"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP2"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SUB"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "RETURN"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "JUMPDEST"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "DUP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "DUP2"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "ADD"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "DUP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "DUP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "ADD"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP3"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP2"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "POP"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "POP"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "POP"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "JUMPDEST"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "MLOAD"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "DUP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "DUP3"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "ISZERO"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "ISZERO"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "ISZERO"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "ISZERO"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "DUP2"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "MSTORE"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "ADD"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP2"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "POP"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "POP"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "MLOAD"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "DUP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP2"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SUB"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "RETURN"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "JUMPDEST"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "DUP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "DUP2"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "ADD"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "DUP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "DUP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "AND"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "ADD"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP3"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP2"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "DUP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "ADD"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP3"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP2"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "POP"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "POP"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "POP"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "JUMPDEST"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "MLOAD"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "DUP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "DUP3"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "ISZERO"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "ISZERO"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "ISZERO"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "ISZERO"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "DUP2"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "MSTORE"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "ADD"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP2"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "POP"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "POP"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "MLOAD"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "DUP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP2"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SUB"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP1"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "RETURN"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "JUMPDEST"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "DUP2"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "ADD"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "AND"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "ADD"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP3"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP2"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "ADD"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP3"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP2"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "JUMPDEST"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "MLOAD"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "DUP3"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "ISZERO"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "ISZERO"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "ISZERO"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "ISZERO"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "DUP2"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "MSTORE"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "ADD"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP2"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "MLOAD"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP2"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SUB"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "RETURN"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "JUMPDEST"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "JUMPDEST"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "STOP"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "JUMPDEST"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "DUP1"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "DUP2"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "ADD"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "SWAP1"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "DUP1"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "DUP1"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "AND"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "SWAP1"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "ADD"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "SWAP1"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "SWAP3"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "SWAP2"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "SWAP1"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "POP"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "POP"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "POP"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "JUMPDEST"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "STOP"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "JUMPDEST"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "DUP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "DUP2"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "ADD"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "DUP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "DUP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "AND"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "ADD"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP3"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP2"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "DUP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "AND"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "ADD"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP3"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP2"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "POP"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "POP"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "POP"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "JUMPDEST"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "MLOAD"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "DUP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "DUP3"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "DUP2"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "MSTORE"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "ADD"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP2"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "POP"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "POP"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "MLOAD"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "DUP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP2"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SUB"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP1"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "RETURN"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "JUMPDEST"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "DUP2"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "AND"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "ADD"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "SWAP3"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "SWAP2"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "SWAP1"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "JUMPDEST"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "STOP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "JUMPDEST"
										},
										{
											"begin": 13432,
											"end": 13445,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13461,
											"end": 13466,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SLOAD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "AND"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ISZERO"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MUL"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SUB"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "AND"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DIV"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DIV"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MUL"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MLOAD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MSTORE"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP3"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MSTORE"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP3"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SLOAD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "AND"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ISZERO"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MUL"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SUB"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "AND"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DIV"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ISZERO"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "JUMPI"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "LT"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "JUMPI"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP4"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SLOAD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DIV"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MUL"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP4"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MSTORE"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "JUMP"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "JUMPDEST"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP3"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MSTORE"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "KECCAK256"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "JUMPDEST"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SLOAD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "MSTORE"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP4"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "GT"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "JUMPI"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP3"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SUB"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "AND"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "DUP3"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP2"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "JUMPDEST"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13454,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "SWAP1"
										},
										{
											"begin": 13393,
											"end": 13472,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "JUMPDEST"
										},
										{
											"begin": 14501,
											"end": 14505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14514,
											"end": 14553,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 14523,
											"end": 14535,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 14523,
											"end": 14533,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14523,
											"end": 14535,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14523,
											"end": 14535,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 14523,
											"end": 14535,
											"name": "JUMPDEST"
										},
										{
											"begin": 14537,
											"end": 14544,
											"name": "DUP5"
										},
										{
											"begin": 14546,
											"end": 14552,
											"name": "DUP5"
										},
										{
											"begin": 14514,
											"end": 14522,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14514,
											"end": 14553,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14514,
											"end": 14553,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 14514,
											"end": 14553,
											"name": "JUMPDEST"
										},
										{
											"begin": 14567,
											"end": 14571,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14560,
											"end": 14571,
											"name": "SWAP1"
										},
										{
											"begin": 14560,
											"end": 14571,
											"name": "POP"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP3"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "SWAP2"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "POP"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "POP"
										},
										{
											"begin": 14433,
											"end": 14577,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "JUMPDEST"
										},
										{
											"begin": 13574,
											"end": 13581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13597,
											"end": 13609,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13597,
											"end": 13609,
											"name": "SLOAD"
										},
										{
											"begin": 13590,
											"end": 13609,
											"name": "SWAP1"
										},
										{
											"begin": 13590,
											"end": 13609,
											"name": "POP"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "SWAP1"
										},
										{
											"begin": 13528,
											"end": 13615,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "JUMPDEST"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 11248,
											"end": 11258,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMPDEST"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DUP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SLOAD"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "EXP"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DIV"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "EQ"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPI"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "REVERT"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPDEST"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "SWAP1"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "SLOAD"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "SWAP1"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "EXP"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "SWAP1"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "DIV"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "AND"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "JUMPI"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "MLOAD"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP2"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "MSTORE"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "ADD"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP1"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP1"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "ADD"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP3"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP2"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "SUB"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP3"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "MSTORE"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP2"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "MSTORE"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "ADD"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP1"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH",
											"value": "546F6B656E20697320616C726561647920756E6C6F636B656400000000000000"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP2"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "MSTORE"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "POP"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "ADD"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "SWAP2"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "POP"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "POP"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "MLOAD"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "DUP1"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "SWAP2"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "SUB"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "SWAP1"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "REVERT"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 10415,
											"end": 10464,
											"name": "JUMPDEST"
										},
										{
											"begin": 10489,
											"end": 10494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10486,
											"name": "DUP1"
										},
										{
											"begin": 10475,
											"end": 10486,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "EXP"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "DUP2"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "SLOAD"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "DUP2"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "MUL"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "NOT"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "AND"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "SWAP1"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "DUP4"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "ISZERO"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "ISZERO"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "MUL"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "OR"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "SWAP1"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "SSTORE"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "POP"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "PUSH",
											"value": "3EBB0E684AF63268F35C843A72F657183E7A0786FB939148605B0262343B4450"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "MLOAD"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "MLOAD"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "DUP1"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "SWAP2"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "SUB"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "SWAP1"
										},
										{
											"begin": 10510,
											"end": 10523,
											"name": "LOG1"
										},
										{
											"begin": 10362,
											"end": 10531,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "JUMPDEST"
										},
										{
											"begin": 15113,
											"end": 15117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15126,
											"end": 15162,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 15136,
											"end": 15142,
											"name": "DUP5"
										},
										{
											"begin": 15144,
											"end": 15153,
											"name": "DUP5"
										},
										{
											"begin": 15155,
											"end": 15161,
											"name": "DUP5"
										},
										{
											"begin": 15126,
											"end": 15135,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 15126,
											"end": 15162,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15126,
											"end": 15162,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 15126,
											"end": 15162,
											"name": "JUMPDEST"
										},
										{
											"begin": 15169,
											"end": 15290,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 15178,
											"end": 15184,
											"name": "DUP5"
										},
										{
											"begin": 15186,
											"end": 15198,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 15186,
											"end": 15196,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15186,
											"end": 15198,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15186,
											"end": 15198,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 15186,
											"end": 15198,
											"name": "JUMPDEST"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 15238,
											"end": 15244,
											"name": "DUP6"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "MLOAD"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "DUP1"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "ADD"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "MSTORE"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "DUP1"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "DUP2"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "MSTORE"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "ADD"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "SWAP2"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "CODECOPY"
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15212,
											"end": 15218,
											"name": "DUP12"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "AND"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "AND"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "DUP2"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "MSTORE"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "ADD"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "SWAP1"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "DUP2"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "MSTORE"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "ADD"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "KECCAK256"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15220,
											"end": 15232,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 15220,
											"end": 15230,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15220,
											"end": 15232,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15220,
											"end": 15232,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 15220,
											"end": 15232,
											"name": "JUMPDEST"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "AND"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "AND"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "DUP2"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "MSTORE"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "ADD"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "SWAP1"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "DUP2"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "MSTORE"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "ADD"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "KECCAK256"
										},
										{
											"begin": 15200,
											"end": 15233,
											"name": "SLOAD"
										},
										{
											"begin": 15200,
											"end": 15237,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 15200,
											"end": 15237,
											"name": "SWAP1"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "SWAP3"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "SWAP2"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "SWAP1"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "AND"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 15200,
											"end": 15289,
											"name": "JUMPDEST"
										},
										{
											"begin": 15169,
											"end": 15177,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 15169,
											"end": 15290,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15169,
											"end": 15290,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 15169,
											"end": 15290,
											"name": "JUMPDEST"
										},
										{
											"begin": 15304,
											"end": 15308,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15297,
											"end": 15308,
											"name": "SWAP1"
										},
										{
											"begin": 15297,
											"end": 15308,
											"name": "POP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP4"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "SWAP3"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "POP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "POP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "POP"
										},
										{
											"begin": 15022,
											"end": 15314,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "JUMPDEST"
										},
										{
											"begin": 13164,
											"end": 13169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "SWAP1"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "SLOAD"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "SWAP1"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "EXP"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "SWAP1"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "DIV"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13185,
											"end": 13194,
											"name": "AND"
										},
										{
											"begin": 13178,
											"end": 13194,
											"name": "SWAP1"
										},
										{
											"begin": 13178,
											"end": 13194,
											"name": "POP"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "SWAP1"
										},
										{
											"begin": 13121,
											"end": 13200,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "JUMPDEST"
										},
										{
											"begin": 15780,
											"end": 15784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15793,
											"end": 15876,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 15802,
											"end": 15814,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 15802,
											"end": 15812,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15802,
											"end": 15814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15802,
											"end": 15814,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 15802,
											"end": 15814,
											"name": "JUMPDEST"
										},
										{
											"begin": 15816,
											"end": 15823,
											"name": "DUP5"
										},
										{
											"begin": 15825,
											"end": 15875,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15864,
											"end": 15874,
											"name": "DUP6"
										},
										{
											"begin": 15825,
											"end": 15836,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15837,
											"end": 15849,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 15837,
											"end": 15847,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15837,
											"end": 15849,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15837,
											"end": 15849,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 15837,
											"end": 15849,
											"name": "JUMPDEST"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "AND"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "AND"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "DUP2"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "MSTORE"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "ADD"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "SWAP1"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "DUP2"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "MSTORE"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "ADD"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "KECCAK256"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15851,
											"end": 15858,
											"name": "DUP10"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "AND"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "AND"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "DUP2"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "MSTORE"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "ADD"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "SWAP1"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "DUP2"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "MSTORE"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "ADD"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "KECCAK256"
										},
										{
											"begin": 15825,
											"end": 15859,
											"name": "SLOAD"
										},
										{
											"begin": 15825,
											"end": 15863,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 15825,
											"end": 15863,
											"name": "SWAP1"
										},
										{
											"begin": 15825,
											"end": 15875,
											"name": "SWAP2"
										},
										{
											"begin": 15825,
											"end": 15875,
											"name": "SWAP1"
										},
										{
											"begin": 15825,
											"end": 15875,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15825,
											"end": 15875,
											"name": "AND"
										},
										{
											"begin": 15825,
											"end": 15875,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15825,
											"end": 15875,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15825,
											"end": 15875,
											"name": "JUMPDEST"
										},
										{
											"begin": 15793,
											"end": 15801,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 15793,
											"end": 15876,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15793,
											"end": 15876,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 15793,
											"end": 15876,
											"name": "JUMPDEST"
										},
										{
											"begin": 15890,
											"end": 15894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15883,
											"end": 15894,
											"name": "SWAP1"
										},
										{
											"begin": 15883,
											"end": 15894,
											"name": "POP"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP3"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "SWAP2"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "POP"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "POP"
										},
										{
											"begin": 15700,
											"end": 15900,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "JUMPDEST"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 11248,
											"end": 11258,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMPDEST"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DUP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SLOAD"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "EXP"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DIV"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "EQ"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPI"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "REVERT"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPDEST"
										},
										{
											"begin": 10832,
											"end": 10844,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10852,
											"name": "DUP3"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "AND"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "AND"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "DUP2"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "MSTORE"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "ADD"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "SWAP1"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "DUP2"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "MSTORE"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "ADD"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "KECCAK256"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "SWAP1"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "SLOAD"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "SWAP1"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "EXP"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "SWAP1"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "DIV"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "AND"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "JUMPI"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "MLOAD"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP2"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "MSTORE"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "ADD"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP1"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP1"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "ADD"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP3"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP2"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "SUB"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP3"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "MSTORE"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP2"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "MSTORE"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "ADD"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP1"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH",
											"value": "57616C6C657420697320616C726561647920756E6C6F636B6564000000000000"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP2"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "MSTORE"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "POP"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "ADD"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "SWAP2"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "POP"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "POP"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "MLOAD"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "DUP1"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "SWAP2"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "SUB"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "SWAP1"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "REVERT"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 10824,
											"end": 10884,
											"name": "JUMPDEST"
										},
										{
											"begin": 10919,
											"end": 10924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10908,
											"end": 10915,
											"name": "DUP4"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "AND"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "AND"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "DUP2"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "MSTORE"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "ADD"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "SWAP1"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "DUP2"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "MSTORE"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "ADD"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "KECCAK256"
										},
										{
											"begin": 10895,
											"end": 10916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "EXP"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "DUP2"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "SLOAD"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "DUP2"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "MUL"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "NOT"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "AND"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "SWAP1"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "DUP4"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "ISZERO"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "ISZERO"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "MUL"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "OR"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "SWAP1"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "SSTORE"
										},
										{
											"begin": 10895,
											"end": 10924,
											"name": "POP"
										},
										{
											"begin": 10953,
											"end": 10960,
											"name": "DUP1"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "AND"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "PUSH",
											"value": "5185E00B6EF8DE975B632CA028D85781BD6DA04DBDDA5047C5E595AA7B747137"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "MLOAD"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "MLOAD"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "DUP1"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "SWAP2"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "SUB"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "SWAP1"
										},
										{
											"begin": 10940,
											"end": 10961,
											"name": "LOG2"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "POP"
										},
										{
											"begin": 10755,
											"end": 10969,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "JUMPDEST"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "SWAP1"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "SLOAD"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "SWAP1"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "EXP"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "SWAP1"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "DIV"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "AND"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "DUP2"
										},
										{
											"begin": 10106,
											"end": 10129,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "JUMPDEST"
										},
										{
											"begin": 13728,
											"end": 13735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13760,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13761,
											"end": 13768,
											"name": "DUP4"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "AND"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "AND"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "DUP2"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "MSTORE"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "ADD"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "SWAP1"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "DUP2"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "MSTORE"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "ADD"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "KECCAK256"
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "SLOAD"
										},
										{
											"begin": 13744,
											"end": 13769,
											"name": "SWAP1"
										},
										{
											"begin": 13744,
											"end": 13769,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP2"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "SWAP1"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13775,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "JUMPDEST"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 11248,
											"end": 11258,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMPDEST"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DUP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SLOAD"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "EXP"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DIV"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "EQ"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPI"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "REVERT"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPDEST"
										},
										{
											"begin": 11741,
											"end": 11742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "AND"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "DUP1"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "SWAP1"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "SLOAD"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "SWAP1"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "EXP"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "SWAP1"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "DIV"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "AND"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "AND"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "MLOAD"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "MLOAD"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "DUP1"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "SWAP2"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "SUB"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "SWAP1"
										},
										{
											"begin": 11704,
											"end": 11744,
											"name": "LOG3"
										},
										{
											"begin": 11768,
											"end": 11769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "DUP1"
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "EXP"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "DUP2"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "SLOAD"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "DUP2"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "MUL"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "NOT"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "AND"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "SWAP1"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "DUP4"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "AND"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "MUL"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "OR"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "SWAP1"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "SSTORE"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "POP"
										},
										{
											"begin": 11646,
											"end": 11776,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "JUMPDEST"
										},
										{
											"begin": 13026,
											"end": 13033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13049,
											"end": 13056,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 13049,
											"end": 13054,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 13049,
											"end": 13056,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13049,
											"end": 13056,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 13049,
											"end": 13056,
											"name": "JUMPDEST"
										},
										{
											"begin": 13042,
											"end": 13056,
											"name": "SWAP1"
										},
										{
											"begin": 13042,
											"end": 13056,
											"name": "POP"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "SWAP1"
										},
										{
											"begin": 12983,
											"end": 13062,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "JUMPDEST"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "DUP1"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "SWAP1"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "SLOAD"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "SWAP1"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "EXP"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "SWAP1"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "DIV"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11111,
											"name": "SWAP1"
										},
										{
											"begin": 11098,
											"end": 11111,
											"name": "POP"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "SWAP1"
										},
										{
											"begin": 11044,
											"end": 11117,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "JUMPDEST"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "MSTORE"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "MSTORE"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "KECCAK256"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP2"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SLOAD"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "EXP"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DIV"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "AND"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "DUP2"
										},
										{
											"begin": 10136,
											"end": 10180,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "JUMPDEST"
										},
										{
											"begin": 13298,
											"end": 13311,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13327,
											"end": 13334,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SLOAD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "AND"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ISZERO"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MUL"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SUB"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "AND"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DIV"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DIV"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MUL"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MLOAD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MSTORE"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP3"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MSTORE"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP3"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SLOAD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "AND"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ISZERO"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MUL"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SUB"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "AND"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DIV"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ISZERO"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "JUMPI"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "LT"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "JUMPI"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP4"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SLOAD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DIV"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MUL"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP4"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MSTORE"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "JUMP"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "JUMPDEST"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP3"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MSTORE"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "KECCAK256"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "JUMPDEST"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SLOAD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "MSTORE"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP4"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "GT"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "JUMPI"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP3"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SUB"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "AND"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "DUP3"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP2"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "JUMPDEST"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "POP"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "POP"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "POP"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "POP"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "POP"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13320,
											"end": 13334,
											"name": "POP"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13257,
											"end": 13340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "JUMPDEST"
										},
										{
											"begin": 16879,
											"end": 16883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 11248,
											"end": 11258,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMPDEST"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DUP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SLOAD"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "EXP"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DIV"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "EQ"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPI"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "REVERT"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPDEST"
										},
										{
											"begin": 16892,
											"end": 16919,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 16898,
											"end": 16910,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 16898,
											"end": 16908,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 16898,
											"end": 16910,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16898,
											"end": 16910,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 16898,
											"end": 16910,
											"name": "JUMPDEST"
										},
										{
											"begin": 16912,
											"end": 16918,
											"name": "DUP4"
										},
										{
											"begin": 16892,
											"end": 16897,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 16892,
											"end": 16919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16892,
											"end": 16919,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 16892,
											"end": 16919,
											"name": "JUMPDEST"
										},
										{
											"begin": 16933,
											"end": 16937,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16926,
											"end": 16937,
											"name": "SWAP1"
										},
										{
											"begin": 16926,
											"end": 16937,
											"name": "POP"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP2"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "SWAP1"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "POP"
										},
										{
											"begin": 16823,
											"end": 16943,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "JUMPDEST"
										},
										{
											"begin": 16457,
											"end": 16461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16470,
											"end": 16599,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 16479,
											"end": 16491,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 16479,
											"end": 16489,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 16479,
											"end": 16491,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16479,
											"end": 16491,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 16479,
											"end": 16491,
											"name": "JUMPDEST"
										},
										{
											"begin": 16493,
											"end": 16500,
											"name": "DUP5"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 16541,
											"end": 16556,
											"name": "DUP6"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "MLOAD"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "DUP1"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "ADD"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "MSTORE"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "DUP1"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "DUP2"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "MSTORE"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "ADD"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "SWAP2"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "CODECOPY"
										},
										{
											"begin": 16502,
											"end": 16513,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16514,
											"end": 16526,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 16514,
											"end": 16524,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 16514,
											"end": 16526,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16514,
											"end": 16526,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 16514,
											"end": 16526,
											"name": "JUMPDEST"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "AND"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "AND"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "DUP2"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "MSTORE"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "ADD"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "SWAP1"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "DUP2"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "MSTORE"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "ADD"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16502,
											"end": 16527,
											"name": "KECCAK256"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16528,
											"end": 16535,
											"name": "DUP11"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "AND"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "AND"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "DUP2"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "MSTORE"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "ADD"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "SWAP1"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "DUP2"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "MSTORE"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "ADD"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "KECCAK256"
										},
										{
											"begin": 16502,
											"end": 16536,
											"name": "SLOAD"
										},
										{
											"begin": 16502,
											"end": 16540,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 16502,
											"end": 16540,
											"name": "SWAP1"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "SWAP3"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "SWAP2"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "SWAP1"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "AND"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 16502,
											"end": 16598,
											"name": "JUMPDEST"
										},
										{
											"begin": 16470,
											"end": 16478,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 16470,
											"end": 16599,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16470,
											"end": 16599,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 16470,
											"end": 16599,
											"name": "JUMPDEST"
										},
										{
											"begin": 16613,
											"end": 16617,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16606,
											"end": 16617,
											"name": "SWAP1"
										},
										{
											"begin": 16606,
											"end": 16617,
											"name": "POP"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP3"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "SWAP2"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "POP"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "POP"
										},
										{
											"begin": 16372,
											"end": 16623,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "JUMPDEST"
										},
										{
											"begin": 14040,
											"end": 14044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14053,
											"end": 14095,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 14063,
											"end": 14075,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 14063,
											"end": 14073,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14063,
											"end": 14075,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14063,
											"end": 14075,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 14063,
											"end": 14075,
											"name": "JUMPDEST"
										},
										{
											"begin": 14077,
											"end": 14086,
											"name": "DUP5"
										},
										{
											"begin": 14088,
											"end": 14094,
											"name": "DUP5"
										},
										{
											"begin": 14053,
											"end": 14062,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 14053,
											"end": 14095,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14053,
											"end": 14095,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 14053,
											"end": 14095,
											"name": "JUMPDEST"
										},
										{
											"begin": 14109,
											"end": 14113,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14102,
											"end": 14113,
											"name": "SWAP1"
										},
										{
											"begin": 14102,
											"end": 14113,
											"name": "POP"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP3"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "SWAP2"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13969,
											"end": 14119,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "JUMPDEST"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 11248,
											"end": 11258,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMPDEST"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DUP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SLOAD"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "EXP"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DIV"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "EQ"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPI"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "REVERT"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPDEST"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "SWAP1"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "SLOAD"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "SWAP1"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "EXP"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "SWAP1"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "DIV"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "AND"
										},
										{
											"begin": 10250,
											"end": 10262,
											"name": "ISZERO"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "JUMPI"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "MLOAD"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP2"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "MSTORE"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "ADD"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP1"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP1"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "ADD"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP3"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP2"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "SUB"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP3"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "MSTORE"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP2"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "MSTORE"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "ADD"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP1"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH",
											"value": "546F6B656E20697320616C7265616479206C6F636B6564000000000000000000"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP2"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "MSTORE"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "POP"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "ADD"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "SWAP2"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "POP"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "POP"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "MLOAD"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "DUP1"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "SWAP2"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "SUB"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "SWAP1"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "REVERT"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 10242,
											"end": 10290,
											"name": "JUMPDEST"
										},
										{
											"begin": 10315,
											"end": 10319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10301,
											"end": 10312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10301,
											"end": 10312,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "EXP"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "DUP2"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "SLOAD"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "DUP2"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "MUL"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "NOT"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "AND"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "SWAP1"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "DUP4"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "ISZERO"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "ISZERO"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "MUL"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "OR"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "SWAP1"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "SSTORE"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "POP"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "PUSH",
											"value": "4470EC49AE79DEDF38DE6CFEEA4279D5EA6B681C2AA4C404B2F7E1778BD22280"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "MLOAD"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "MLOAD"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "DUP1"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "SWAP2"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "SUB"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "SWAP1"
										},
										{
											"begin": 10335,
											"end": 10346,
											"name": "LOG1"
										},
										{
											"begin": 10191,
											"end": 10354,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "JUMPDEST"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 11248,
											"end": 11258,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMPDEST"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DUP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SLOAD"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "EXP"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DIV"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "EQ"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPI"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "REVERT"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPDEST"
										},
										{
											"begin": 10615,
											"end": 10627,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10628,
											"end": 10635,
											"name": "DUP3"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "AND"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "AND"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "DUP2"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "MSTORE"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "ADD"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "SWAP1"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "DUP2"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "MSTORE"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "ADD"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "KECCAK256"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "SWAP1"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "SLOAD"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "SWAP1"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "EXP"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "SWAP1"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "DIV"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "AND"
										},
										{
											"begin": 10614,
											"end": 10636,
											"name": "ISZERO"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "JUMPI"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "MLOAD"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP2"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "MSTORE"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "ADD"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP1"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP1"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "ADD"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP3"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP2"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "SUB"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP3"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "MSTORE"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP2"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "MSTORE"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "ADD"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP1"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH",
											"value": "57616C6C657420697320616C7265616479206C6F636B65640000000000000000"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP2"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "MSTORE"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "POP"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "ADD"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "SWAP2"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "POP"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "POP"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "MLOAD"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "DUP1"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "SWAP2"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "SUB"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "SWAP1"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "REVERT"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 10606,
											"end": 10665,
											"name": "JUMPDEST"
										},
										{
											"begin": 10700,
											"end": 10704,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10676,
											"end": 10688,
											"name": "DUP1"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10696,
											"name": "DUP4"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "AND"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "AND"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "DUP2"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "MSTORE"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "ADD"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "SWAP1"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "DUP2"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "MSTORE"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "ADD"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "KECCAK256"
										},
										{
											"begin": 10676,
											"end": 10697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "EXP"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "DUP2"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "SLOAD"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "DUP2"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "MUL"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "NOT"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "AND"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "SWAP1"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "DUP4"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "ISZERO"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "ISZERO"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "MUL"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "OR"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "SWAP1"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "SSTORE"
										},
										{
											"begin": 10676,
											"end": 10704,
											"name": "POP"
										},
										{
											"begin": 10731,
											"end": 10738,
											"name": "DUP1"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "AND"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "PUSH",
											"value": "9349E03B539F2102CDDD8A85D289548DAC032B68B8B2B3B0530626B495A7E7F0"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "MLOAD"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "MLOAD"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "DUP1"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "SWAP2"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "SUB"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "SWAP1"
										},
										{
											"begin": 10720,
											"end": 10739,
											"name": "LOG2"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "POP"
										},
										{
											"begin": 10539,
											"end": 10747,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "JUMPDEST"
										},
										{
											"begin": 14247,
											"end": 14254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14270,
											"end": 14281,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14282,
											"end": 14287,
											"name": "DUP5"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "AND"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "AND"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "DUP2"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "MSTORE"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "ADD"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "SWAP1"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "DUP2"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "MSTORE"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "ADD"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "KECCAK256"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14289,
											"end": 14296,
											"name": "DUP4"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "AND"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "AND"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "DUP2"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "MSTORE"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "ADD"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "SWAP1"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "DUP2"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "MSTORE"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "ADD"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "KECCAK256"
										},
										{
											"begin": 14270,
											"end": 14297,
											"name": "SLOAD"
										},
										{
											"begin": 14263,
											"end": 14297,
											"name": "SWAP1"
										},
										{
											"begin": 14263,
											"end": 14297,
											"name": "POP"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP3"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "SWAP2"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "POP"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "POP"
										},
										{
											"begin": 14173,
											"end": 14303,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "JUMPDEST"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 11248,
											"end": 11258,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "JUMPDEST"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DUP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SLOAD"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "EXP"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "SWAP1"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "DIV"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11244,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "EQ"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPI"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP3"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "POP"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "MLOAD"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "DUP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP2"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SUB"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "SWAP1"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "REVERT"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 11230,
											"end": 11297,
											"name": "JUMPDEST"
										},
										{
											"begin": 11990,
											"end": 12018,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 12009,
											"end": 12017,
											"name": "DUP2"
										},
										{
											"begin": 11990,
											"end": 12008,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 11990,
											"end": 12018,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11990,
											"end": 12018,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 11990,
											"end": 12018,
											"name": "JUMPDEST"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "POP"
										},
										{
											"begin": 11921,
											"end": 12024,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3709,
											"end": 3801,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3709,
											"end": 3801,
											"name": "JUMPDEST"
										},
										{
											"begin": 3754,
											"end": 3769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3795,
											"name": "CALLER"
										},
										{
											"begin": 3778,
											"end": 3795,
											"name": "SWAP1"
										},
										{
											"begin": 3778,
											"end": 3795,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3801,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3801,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19453,
											"end": 19773,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 19453,
											"end": 19773,
											"name": "JUMPDEST"
										},
										{
											"begin": 19560,
											"end": 19561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19543,
											"end": 19562,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19543,
											"end": 19562,
											"name": "AND"
										},
										{
											"begin": 19543,
											"end": 19548,
											"name": "DUP4"
										},
										{
											"begin": 19543,
											"end": 19562,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19543,
											"end": 19562,
											"name": "AND"
										},
										{
											"begin": 19543,
											"end": 19562,
											"name": "EQ"
										},
										{
											"begin": 19543,
											"end": 19562,
											"name": "ISZERO"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "JUMPI"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "MLOAD"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "DUP2"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "MSTORE"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "ADD"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "DUP1"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "DUP1"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "ADD"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "DUP3"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "DUP2"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "SUB"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "DUP3"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "MSTORE"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "DUP2"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "MSTORE"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "ADD"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "DUP1"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "SWAP2"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "CODECOPY"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "ADD"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "SWAP2"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "POP"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "POP"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "MLOAD"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "DUP1"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "SWAP2"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "SUB"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "SWAP1"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "REVERT"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 19535,
											"end": 19603,
											"name": "JUMPDEST"
										},
										{
											"begin": 19637,
											"end": 19638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19618,
											"end": 19639,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19618,
											"end": 19639,
											"name": "AND"
										},
										{
											"begin": 19618,
											"end": 19625,
											"name": "DUP3"
										},
										{
											"begin": 19618,
											"end": 19639,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19618,
											"end": 19639,
											"name": "AND"
										},
										{
											"begin": 19618,
											"end": 19639,
											"name": "EQ"
										},
										{
											"begin": 19618,
											"end": 19639,
											"name": "ISZERO"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "JUMPI"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "MLOAD"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "DUP2"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "MSTORE"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "ADD"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "DUP1"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "DUP1"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "ADD"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "DUP3"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "DUP2"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "SUB"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "DUP3"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "MSTORE"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "DUP2"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "MSTORE"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "ADD"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "DUP1"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "SWAP2"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "CODECOPY"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "ADD"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "SWAP2"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "POP"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "POP"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "MLOAD"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "DUP1"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "SWAP2"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "SUB"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "SWAP1"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "REVERT"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 19610,
											"end": 19678,
											"name": "JUMPDEST"
										},
										{
											"begin": 19717,
											"end": 19723,
											"name": "DUP1"
										},
										{
											"begin": 19687,
											"end": 19698,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19699,
											"end": 19704,
											"name": "DUP6"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "AND"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "AND"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "DUP2"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "MSTORE"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "ADD"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "SWAP1"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "DUP2"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "MSTORE"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "ADD"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "KECCAK256"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19706,
											"end": 19713,
											"name": "DUP5"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "AND"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "AND"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "DUP2"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "MSTORE"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "ADD"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "SWAP1"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "DUP2"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "MSTORE"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "ADD"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19687,
											"end": 19714,
											"name": "KECCAK256"
										},
										{
											"begin": 19687,
											"end": 19723,
											"name": "DUP2"
										},
										{
											"begin": 19687,
											"end": 19723,
											"name": "SWAP1"
										},
										{
											"begin": 19687,
											"end": 19723,
											"name": "SSTORE"
										},
										{
											"begin": 19687,
											"end": 19723,
											"name": "POP"
										},
										{
											"begin": 19751,
											"end": 19758,
											"name": "DUP2"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "AND"
										},
										{
											"begin": 19744,
											"end": 19749,
											"name": "DUP4"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "AND"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 19760,
											"end": 19766,
											"name": "DUP4"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "MLOAD"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "DUP1"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "DUP3"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "DUP2"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "MSTORE"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "ADD"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "SWAP2"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "POP"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "POP"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "MLOAD"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "DUP1"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "SWAP2"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "SUB"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "SWAP1"
										},
										{
											"begin": 19735,
											"end": 19767,
											"name": "LOG3"
										},
										{
											"begin": 19453,
											"end": 19773,
											"name": "POP"
										},
										{
											"begin": 19453,
											"end": 19773,
											"name": "POP"
										},
										{
											"begin": 19453,
											"end": 19773,
											"name": "POP"
										},
										{
											"begin": 19453,
											"end": 19773,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17403,
											"end": 17852,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 17403,
											"end": 17852,
											"name": "JUMPDEST"
										},
										{
											"begin": 17515,
											"end": 17516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17497,
											"end": 17517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17497,
											"end": 17517,
											"name": "AND"
										},
										{
											"begin": 17497,
											"end": 17503,
											"name": "DUP4"
										},
										{
											"begin": 17497,
											"end": 17517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17497,
											"end": 17517,
											"name": "AND"
										},
										{
											"begin": 17497,
											"end": 17517,
											"name": "EQ"
										},
										{
											"begin": 17497,
											"end": 17517,
											"name": "ISZERO"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "JUMPI"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "MLOAD"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "DUP2"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "MSTORE"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "ADD"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "DUP1"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "DUP1"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "ADD"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "DUP3"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "DUP2"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "SUB"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "DUP3"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "MSTORE"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "DUP2"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "MSTORE"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "ADD"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "DUP1"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "SWAP2"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "CODECOPY"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "ADD"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "SWAP2"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "POP"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "POP"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "MLOAD"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "DUP1"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "SWAP2"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "SUB"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "SWAP1"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "REVERT"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 17489,
											"end": 17559,
											"name": "JUMPDEST"
										},
										{
											"begin": 17595,
											"end": 17596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17574,
											"end": 17597,
											"name": "AND"
										},
										{
											"begin": 17574,
											"end": 17583,
											"name": "DUP3"
										},
										{
											"begin": 17574,
											"end": 17597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17574,
											"end": 17597,
											"name": "AND"
										},
										{
											"begin": 17574,
											"end": 17597,
											"name": "EQ"
										},
										{
											"begin": 17574,
											"end": 17597,
											"name": "ISZERO"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "JUMPI"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "MLOAD"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "DUP2"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "MSTORE"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "ADD"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "DUP1"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "DUP1"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "ADD"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "DUP3"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "DUP2"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "SUB"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "DUP3"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "MSTORE"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "DUP2"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "MSTORE"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "ADD"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "DUP1"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "SWAP2"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "CODECOPY"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "ADD"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "SWAP2"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "POP"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "POP"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "MLOAD"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "DUP1"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "SWAP2"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "SUB"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "SWAP1"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "REVERT"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 17566,
											"end": 17637,
											"name": "JUMPDEST"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 17688,
											"end": 17694,
											"name": "DUP2"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "MLOAD"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "DUP1"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "ADD"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "MSTORE"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "DUP1"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "DUP2"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "MSTORE"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "ADD"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "SWAP2"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "CODECOPY"
										},
										{
											"begin": 17666,
											"end": 17675,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17676,
											"end": 17682,
											"name": "DUP8"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "AND"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "AND"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "DUP2"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "MSTORE"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "ADD"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "SWAP1"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "DUP2"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "MSTORE"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "ADD"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "KECCAK256"
										},
										{
											"begin": 17666,
											"end": 17683,
											"name": "SLOAD"
										},
										{
											"begin": 17666,
											"end": 17687,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 17666,
											"end": 17687,
											"name": "SWAP1"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "SWAP3"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "SWAP2"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "SWAP1"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "AND"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 17666,
											"end": 17737,
											"name": "JUMPDEST"
										},
										{
											"begin": 17646,
											"end": 17655,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17656,
											"end": 17662,
											"name": "DUP6"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "AND"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "AND"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "DUP2"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "MSTORE"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "ADD"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "SWAP1"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "DUP2"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "MSTORE"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "ADD"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17646,
											"end": 17663,
											"name": "KECCAK256"
										},
										{
											"begin": 17646,
											"end": 17737,
											"name": "DUP2"
										},
										{
											"begin": 17646,
											"end": 17737,
											"name": "SWAP1"
										},
										{
											"begin": 17646,
											"end": 17737,
											"name": "SSTORE"
										},
										{
											"begin": 17646,
											"end": 17737,
											"name": "POP"
										},
										{
											"begin": 17767,
											"end": 17799,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 17792,
											"end": 17798,
											"name": "DUP2"
										},
										{
											"begin": 17767,
											"end": 17776,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17777,
											"end": 17786,
											"name": "DUP6"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "AND"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "AND"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "DUP2"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "MSTORE"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "ADD"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "SWAP1"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "DUP2"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "MSTORE"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "ADD"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "KECCAK256"
										},
										{
											"begin": 17767,
											"end": 17787,
											"name": "SLOAD"
										},
										{
											"begin": 17767,
											"end": 17791,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 17767,
											"end": 17791,
											"name": "SWAP1"
										},
										{
											"begin": 17767,
											"end": 17799,
											"name": "SWAP2"
										},
										{
											"begin": 17767,
											"end": 17799,
											"name": "SWAP1"
										},
										{
											"begin": 17767,
											"end": 17799,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17767,
											"end": 17799,
											"name": "AND"
										},
										{
											"begin": 17767,
											"end": 17799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17767,
											"end": 17799,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 17767,
											"end": 17799,
											"name": "JUMPDEST"
										},
										{
											"begin": 17744,
											"end": 17753,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17754,
											"end": 17763,
											"name": "DUP5"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "AND"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "AND"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "DUP2"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "MSTORE"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "ADD"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "SWAP1"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "DUP2"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "MSTORE"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "ADD"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17744,
											"end": 17764,
											"name": "KECCAK256"
										},
										{
											"begin": 17744,
											"end": 17799,
											"name": "DUP2"
										},
										{
											"begin": 17744,
											"end": 17799,
											"name": "SWAP1"
										},
										{
											"begin": 17744,
											"end": 17799,
											"name": "SSTORE"
										},
										{
											"begin": 17744,
											"end": 17799,
											"name": "POP"
										},
										{
											"begin": 17828,
											"end": 17837,
											"name": "DUP2"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "AND"
										},
										{
											"begin": 17820,
											"end": 17826,
											"name": "DUP4"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "AND"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17839,
											"end": 17845,
											"name": "DUP4"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "MLOAD"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "DUP1"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "DUP3"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "DUP2"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "MSTORE"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "ADD"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "SWAP2"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "POP"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "POP"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "MLOAD"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "DUP1"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "SWAP2"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "SUB"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "SWAP1"
										},
										{
											"begin": 17811,
											"end": 17846,
											"name": "LOG3"
										},
										{
											"begin": 17403,
											"end": 17852,
											"name": "POP"
										},
										{
											"begin": 17403,
											"end": 17852,
											"name": "POP"
										},
										{
											"begin": 17403,
											"end": 17852,
											"name": "POP"
										},
										{
											"begin": 17403,
											"end": 17852,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5668,
											"end": 5846,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 5668,
											"end": 5846,
											"name": "JUMPDEST"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5784,
											"name": "DUP4"
										},
										{
											"begin": 5778,
											"end": 5779,
											"name": "DUP4"
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "GT"
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "ISZERO"
										},
										{
											"begin": 5786,
											"end": 5798,
											"name": "DUP3"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPI"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MSTORE"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP3"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP3"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MSTORE"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MSTORE"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "AND"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ISZERO"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPI"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP3"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "EXP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "NOT"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "AND"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MSTORE"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPDEST"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP3"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP2"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "REVERT"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPDEST"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5823,
											"name": "DUP4"
										},
										{
											"begin": 5818,
											"end": 5819,
											"name": "DUP6"
										},
										{
											"begin": 5818,
											"end": 5823,
											"name": "SUB"
										},
										{
											"begin": 5806,
											"end": 5823,
											"name": "SWAP1"
										},
										{
											"begin": 5806,
											"end": 5823,
											"name": "POP"
										},
										{
											"begin": 5839,
											"end": 5840,
											"name": "DUP1"
										},
										{
											"begin": 5832,
											"end": 5840,
											"name": "SWAP2"
										},
										{
											"begin": 5832,
											"end": 5840,
											"name": "POP"
										},
										{
											"begin": 5832,
											"end": 5840,
											"name": "POP"
										},
										{
											"begin": 5668,
											"end": 5846,
											"name": "SWAP4"
										},
										{
											"begin": 5668,
											"end": 5846,
											"name": "SWAP3"
										},
										{
											"begin": 5668,
											"end": 5846,
											"name": "POP"
										},
										{
											"begin": 5668,
											"end": 5846,
											"name": "POP"
										},
										{
											"begin": 5668,
											"end": 5846,
											"name": "POP"
										},
										{
											"begin": 5668,
											"end": 5846,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4841,
											"end": 5008,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 4841,
											"end": 5008,
											"name": "JUMPDEST"
										},
										{
											"begin": 4899,
											"end": 4906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4924,
											"name": "DUP1"
										},
										{
											"begin": 4931,
											"end": 4932,
											"name": "DUP3"
										},
										{
											"begin": 4927,
											"end": 4928,
											"name": "DUP5"
										},
										{
											"begin": 4927,
											"end": 4932,
											"name": "ADD"
										},
										{
											"begin": 4915,
											"end": 4932,
											"name": "SWAP1"
										},
										{
											"begin": 4915,
											"end": 4932,
											"name": "POP"
										},
										{
											"begin": 4952,
											"end": 4953,
											"name": "DUP4"
										},
										{
											"begin": 4947,
											"end": 4948,
											"name": "DUP2"
										},
										{
											"begin": 4947,
											"end": 4953,
											"name": "LT"
										},
										{
											"begin": 4947,
											"end": 4953,
											"name": "ISZERO"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "MLOAD"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP2"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "MSTORE"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "ADD"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "ADD"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP3"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP2"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "SUB"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP3"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "MSTORE"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP2"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "MSTORE"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "ADD"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP2"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "MSTORE"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "ADD"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "SWAP2"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "MLOAD"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "SWAP2"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "SUB"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "SWAP1"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "REVERT"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 4939,
											"end": 4985,
											"name": "JUMPDEST"
										},
										{
											"begin": 5001,
											"end": 5002,
											"name": "DUP1"
										},
										{
											"begin": 4994,
											"end": 5002,
											"name": "SWAP2"
										},
										{
											"begin": 4994,
											"end": 5002,
											"name": "POP"
										},
										{
											"begin": 4994,
											"end": 5002,
											"name": "POP"
										},
										{
											"begin": 4841,
											"end": 5008,
											"name": "SWAP3"
										},
										{
											"begin": 4841,
											"end": 5008,
											"name": "SWAP2"
										},
										{
											"begin": 4841,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4841,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4841,
											"end": 5008,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18113,
											"end": 18403,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 18113,
											"end": 18403,
											"name": "JUMPDEST"
										},
										{
											"begin": 18204,
											"end": 18205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18185,
											"end": 18206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18185,
											"end": 18206,
											"name": "AND"
										},
										{
											"begin": 18185,
											"end": 18192,
											"name": "DUP3"
										},
										{
											"begin": 18185,
											"end": 18206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18185,
											"end": 18206,
											"name": "AND"
										},
										{
											"begin": 18185,
											"end": 18206,
											"name": "EQ"
										},
										{
											"begin": 18185,
											"end": 18206,
											"name": "ISZERO"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "JUMPI"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "MLOAD"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP2"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "MSTORE"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "ADD"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP1"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP1"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "ADD"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP3"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP2"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "SUB"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP3"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "MSTORE"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP2"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "MSTORE"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "ADD"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP1"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP2"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "MSTORE"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "POP"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "ADD"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "SWAP2"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "POP"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "POP"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "MLOAD"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "DUP1"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "SWAP2"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "SUB"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "SWAP1"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "REVERT"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 18177,
											"end": 18242,
											"name": "JUMPDEST"
										},
										{
											"begin": 18266,
											"end": 18290,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 18283,
											"end": 18289,
											"name": "DUP2"
										},
										{
											"begin": 18266,
											"end": 18278,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18266,
											"end": 18278,
											"name": "SLOAD"
										},
										{
											"begin": 18266,
											"end": 18282,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 18266,
											"end": 18282,
											"name": "SWAP1"
										},
										{
											"begin": 18266,
											"end": 18290,
											"name": "SWAP2"
										},
										{
											"begin": 18266,
											"end": 18290,
											"name": "SWAP1"
										},
										{
											"begin": 18266,
											"end": 18290,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18266,
											"end": 18290,
											"name": "AND"
										},
										{
											"begin": 18266,
											"end": 18290,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18266,
											"end": 18290,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 18266,
											"end": 18290,
											"name": "JUMPDEST"
										},
										{
											"begin": 18251,
											"end": 18263,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18251,
											"end": 18290,
											"name": "DUP2"
										},
										{
											"begin": 18251,
											"end": 18290,
											"name": "SWAP1"
										},
										{
											"begin": 18251,
											"end": 18290,
											"name": "SSTORE"
										},
										{
											"begin": 18251,
											"end": 18290,
											"name": "POP"
										},
										{
											"begin": 18318,
											"end": 18348,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 18341,
											"end": 18347,
											"name": "DUP2"
										},
										{
											"begin": 18318,
											"end": 18327,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18328,
											"end": 18335,
											"name": "DUP6"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "AND"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "AND"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "DUP2"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "MSTORE"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "ADD"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "SWAP1"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "DUP2"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "MSTORE"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "ADD"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "KECCAK256"
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "SLOAD"
										},
										{
											"begin": 18318,
											"end": 18340,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 18318,
											"end": 18340,
											"name": "SWAP1"
										},
										{
											"begin": 18318,
											"end": 18348,
											"name": "SWAP2"
										},
										{
											"begin": 18318,
											"end": 18348,
											"name": "SWAP1"
										},
										{
											"begin": 18318,
											"end": 18348,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18318,
											"end": 18348,
											"name": "AND"
										},
										{
											"begin": 18318,
											"end": 18348,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18318,
											"end": 18348,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 18318,
											"end": 18348,
											"name": "JUMPDEST"
										},
										{
											"begin": 18297,
											"end": 18306,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18307,
											"end": 18314,
											"name": "DUP5"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "AND"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "AND"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "DUP2"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "MSTORE"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "ADD"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "SWAP1"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "DUP2"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "MSTORE"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "ADD"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18297,
											"end": 18315,
											"name": "KECCAK256"
										},
										{
											"begin": 18297,
											"end": 18348,
											"name": "DUP2"
										},
										{
											"begin": 18297,
											"end": 18348,
											"name": "SWAP1"
										},
										{
											"begin": 18297,
											"end": 18348,
											"name": "SSTORE"
										},
										{
											"begin": 18297,
											"end": 18348,
											"name": "POP"
										},
										{
											"begin": 18381,
											"end": 18388,
											"name": "DUP2"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "AND"
										},
										{
											"begin": 18377,
											"end": 18378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "AND"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18390,
											"end": 18396,
											"name": "DUP4"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "MLOAD"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "DUP1"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "DUP3"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "DUP2"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "MSTORE"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "ADD"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "SWAP2"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "POP"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "POP"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "MLOAD"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "DUP1"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "SWAP2"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "SUB"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "SWAP1"
										},
										{
											"begin": 18360,
											"end": 18397,
											"name": "LOG3"
										},
										{
											"begin": 18113,
											"end": 18403,
											"name": "POP"
										},
										{
											"begin": 18113,
											"end": 18403,
											"name": "POP"
										},
										{
											"begin": 18113,
											"end": 18403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12122,
											"end": 12337,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 12122,
											"end": 12337,
											"name": "JUMPDEST"
										},
										{
											"begin": 12212,
											"end": 12213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12192,
											"end": 12214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12192,
											"end": 12214,
											"name": "AND"
										},
										{
											"begin": 12192,
											"end": 12200,
											"name": "DUP2"
										},
										{
											"begin": 12192,
											"end": 12214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12192,
											"end": 12214,
											"name": "AND"
										},
										{
											"begin": 12192,
											"end": 12214,
											"name": "EQ"
										},
										{
											"begin": 12192,
											"end": 12214,
											"name": "ISZERO"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "JUMPI"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "MLOAD"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "DUP2"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "MSTORE"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "ADD"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "DUP1"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "DUP1"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "ADD"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "DUP3"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "DUP2"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "SUB"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "DUP3"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "MSTORE"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "DUP2"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "MSTORE"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "ADD"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "DUP1"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "SWAP2"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "CODECOPY"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "ADD"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "SWAP2"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "POP"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "POP"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "MLOAD"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "DUP1"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "SWAP2"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "SUB"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "SWAP1"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "REVERT"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 12184,
											"end": 12257,
											"name": "JUMPDEST"
										},
										{
											"begin": 12298,
											"end": 12306,
											"name": "DUP1"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "AND"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "DUP1"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "SWAP1"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "SLOAD"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "SWAP1"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "EXP"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "SWAP1"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "DIV"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "AND"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "AND"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "MLOAD"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "MLOAD"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "DUP1"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "SWAP2"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "SUB"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "SWAP1"
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "LOG3"
										},
										{
											"begin": 12323,
											"end": 12331,
											"name": "DUP1"
										},
										{
											"begin": 12314,
											"end": 12320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12314,
											"end": 12320,
											"name": "DUP1"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "EXP"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "DUP2"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "SLOAD"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "DUP2"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "MUL"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "NOT"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "AND"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "SWAP1"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "DUP4"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "AND"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "MUL"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "OR"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "SWAP1"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "SSTORE"
										},
										{
											"begin": 12314,
											"end": 12331,
											"name": "POP"
										},
										{
											"begin": 12122,
											"end": 12337,
											"name": "POP"
										},
										{
											"begin": 12122,
											"end": 12337,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"lockToken()": "bca7a9e2",
							"lockWallet(address)": "cd808d94",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"tokenLocked()": "6a630559",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unlockToken()": "18a24b5b",
							"unlockWallet(address)": "3e0f974c",
							"walletLocked(address)": "8fe10615"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokenLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokenUnlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WalletLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WalletUnlock\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lockToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"lockWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlockToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"unlockWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"BEP20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x349896e8fca951e268b1705d5db8fe325b080c2b1b6ccf1d24d9f3c7a8b81d54\",\"urls\":[\"bzz-raw://60ec81f952faa323cad8b90753ab85523778b336b990c71adc01b045abadf2a9\",\"dweb:/ipfs/QmTVYudXd6JbZs3FjsruqtqghhAMyngBPRE7a58dH3GT14\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 342,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "tokenLocked",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 346,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "walletLocked",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 523,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 529,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 531,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 533,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 535,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 537,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_name",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x349896e8fca951e268b1705d5db8fe325b080c2b1b6ccf1d24d9f3c7a8b81d54\",\"urls\":[\"bzz-raw://60ec81f952faa323cad8b90753ab85523778b336b990c71adc01b045abadf2a9\",\"dweb:/ipfs/QmTVYudXd6JbZs3FjsruqtqghhAMyngBPRE7a58dH3GT14\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x349896e8fca951e268b1705d5db8fe325b080c2b1b6ccf1d24d9f3c7a8b81d54\",\"urls\":[\"bzz-raw://60ec81f952faa323cad8b90753ab85523778b336b990c71adc01b045abadf2a9\",\"dweb:/ipfs/QmTVYudXd6JbZs3FjsruqtqghhAMyngBPRE7a58dH3GT14\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "TokenLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "TokenUnlock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "WalletLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "WalletUnlock",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "lockToken",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallet",
									"type": "address"
								}
							],
							"name": "lockWallet",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "tokenLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unlockToken",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallet",
									"type": "address"
								}
							],
							"name": "unlockWallet",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "walletLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"lockToken()": "bca7a9e2",
							"lockWallet(address)": "cd808d94",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"tokenLocked()": "6a630559",
							"transferOwnership(address)": "f2fde38b",
							"unlockToken()": "18a24b5b",
							"unlockWallet(address)": "3e0f974c",
							"walletLocked(address)": "8fe10615"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokenLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokenUnlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WalletLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WalletUnlock\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"lockToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"lockWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlockToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"unlockWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x349896e8fca951e268b1705d5db8fe325b080c2b1b6ccf1d24d9f3c7a8b81d54\",\"urls\":[\"bzz-raw://60ec81f952faa323cad8b90753ab85523778b336b990c71adc01b045abadf2a9\",\"dweb:/ipfs/QmTVYudXd6JbZs3FjsruqtqghhAMyngBPRE7a58dH3GT14\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/BEP20.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 342,
								"contract": "contracts/BEP20.sol:Ownable",
								"label": "tokenLocked",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 346,
								"contract": "contracts/BEP20.sol:Ownable",
								"label": "walletLocked",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20.sol\":4606:9034  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20.sol\":4606:9034  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158205b44a896ac42c709ea1f2da4f4d7bc6b7888395c12c2d43b5c4b81c5daf6a56064736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205b44a896ac42c709ea1f2da4f4d7bc6b7888395c12c2d43b5c4b81c5daf6a56064736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 JUMPDEST DIFFICULTY 0xA8 SWAP7 0xAC TIMESTAMP 0xC7 MULMOD 0xEA 0x1F 0x2D LOG4 DELEGATECALL 0xD7 0xBC PUSH12 0x7888395C12C2D43B5C4B81C5 0xDA 0xF6 0xA5 PUSH1 0x64 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "4606:4428:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205b44a896ac42c709ea1f2da4f4d7bc6b7888395c12c2d43b5c4b81c5daf6a56064736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 JUMPDEST DIFFICULTY 0xA8 SWAP7 0xAC TIMESTAMP 0xC7 MULMOD 0xEA 0x1F 0x2D LOG4 DELEGATECALL 0xD7 0xBC PUSH12 0x7888395C12C2D43B5C4B81C5 0xDA 0xF6 0xA5 PUSH1 0x64 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "4606:4428:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4606,
									"end": 9034,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4606,
									"end": 9034,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205b44a896ac42c709ea1f2da4f4d7bc6b7888395c12c2d43b5c4b81c5daf6a56064736f6c63430005100032",
									".code": [
										{
											"begin": 4606,
											"end": 9034,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4606,
											"end": 9034,
											"name": "ADDRESS"
										},
										{
											"begin": 4606,
											"end": 9034,
											"name": "EQ"
										},
										{
											"begin": 4606,
											"end": 9034,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4606,
											"end": 9034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4606,
											"end": 9034,
											"name": "MSTORE"
										},
										{
											"begin": 4606,
											"end": 9034,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 9034,
											"name": "DUP1"
										},
										{
											"begin": 4606,
											"end": 9034,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x349896e8fca951e268b1705d5db8fe325b080c2b1b6ccf1d24d9f3c7a8b81d54\",\"urls\":[\"bzz-raw://60ec81f952faa323cad8b90753ab85523778b336b990c71adc01b045abadf2a9\",\"dweb:/ipfs/QmTVYudXd6JbZs3FjsruqtqghhAMyngBPRE7a58dH3GT14\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BEP20.sol": {
				"ast": {
					"absolutePath": "contracts/BEP20.sol",
					"exportedSymbols": {
						"BEP20Token": [
							1005
						],
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							510
						],
						"SafeMath": [
							298
						]
					},
					"id": 1006,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "141:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "167:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "166:9:0"
									},
									"scope": 88,
									"src": "121:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "278:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "278:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "277:7:0"
									},
									"scope": 88,
									"src": "235:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "383:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "383:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:15:0"
									},
									"scope": 88,
									"src": "342:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "464:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "490:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "490:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "489:15:0"
									},
									"scope": 88,
									"src": "451:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "607:9:0"
									},
									"scope": 88,
									"src": "565:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "716:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "715:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "755:9:0"
									},
									"scope": 88,
									"src": "697:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "996:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1015:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "995:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1048:6:0"
									},
									"scope": 88,
									"src": "978:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1342:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1358:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1341:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1397:9:0"
									},
									"scope": 88,
									"src": "1323:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2063:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2080:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2062:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2114:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2114:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2113:6:0"
									},
									"scope": 88,
									"src": "2046:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2440:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2456:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2475:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2439:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2509:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2509:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2508:6:0"
									},
									"scope": 88,
									"src": "2418:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2693:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2715:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2735:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2692:57:0"
									},
									"src": "2678:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2920:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2943:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2968:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2919:63:0"
									},
									"src": "2905:78:0"
								}
							],
							"scope": 1006,
							"src": "27:2961:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3700:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3688:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3700:0:0"
									},
									"scope": 113,
									"src": "3676:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3771:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3785:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3785:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3778:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3728:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3754:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3754:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3753:17:0"
									},
									"scope": 113,
									"src": "3709:92:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3864:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1036,
													"src": "3871:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3871:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "4008:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4008:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "4001:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3824:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3850:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3850:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3849:14:0"
									},
									"scope": 113,
									"src": "3807:215:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1006,
							"src": "3502:523:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4908:100:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4915:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4927:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4931:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4927:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4915:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4947:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4952:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4947:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4955:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "4939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4939:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4939:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "5001:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4994:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4854:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4865:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4853:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4899:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:9:0"
									},
									"scope": 298,
									"src": "4841:167:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5330:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5348:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5351:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5354:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5344:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5344:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5337:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5287:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5275:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5320:9:0"
									},
									"scope": 298,
									"src": "5263:130:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5763:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5778:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5783:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5778:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5786:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "5770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5770:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5770:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5806:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5818:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5822:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5806:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5839:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5832:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5681:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5692:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5703:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5703:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5680:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5753:9:0"
									},
									"scope": 298,
									"src": "5668:178:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6144:364:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6364:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6369:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6364:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6360:37:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6372:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6388:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6381:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6405:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6417:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6421:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6417:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6405:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6437:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6441:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6437:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6446:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6437:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6449:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "6429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6429:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6429:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6501:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6494:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6090:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6101:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6089:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6135:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6134:9:0"
									},
									"scope": 298,
									"src": "6077:431:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "7019:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "7037:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7040:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7043:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "7033:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7033:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "7026:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6965:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6964:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7010:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7009:9:0"
									},
									"scope": 298,
									"src": "6952:126:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7637:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7719:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7715:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "7707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7707:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7707:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7742:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7754:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7758:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7754:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7742:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7858:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7851:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7555:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7566:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7577:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7577:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7554:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7628:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7627:9:0"
									},
									"scope": 298,
									"src": "7542:323:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8365:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8383:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8386:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8389:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8379:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8379:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8372:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8311:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8322:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8310:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8356:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8355:9:0"
									},
									"scope": 298,
									"src": "8298:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8970:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8985:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8990:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8985:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8993:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "8977:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8977:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8977:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "9020:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "9024:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9020:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "9013:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8888:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8899:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8910:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8910:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8887:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8961:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8960:9:0"
									},
									"scope": 298,
									"src": "8875:156:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1006,
							"src": "4606:4428:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9570:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9570:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 510,
									"src": "9583:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9583:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9639:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9670:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9638:57:0"
									},
									"src": "9612:84:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 310,
									"name": "TokenLock",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9721:2:0"
									},
									"src": "9706:18:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 312,
									"name": "TokenUnlock",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9747:2:0"
									},
									"src": "9730:20:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 316,
									"name": "WalletLock",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"name": "wallet",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9773:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9772:24:0"
									},
									"src": "9756:41:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 320,
									"name": "WalletUnlock",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"indexed": true,
												"name": "wallet",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "9822:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9821:24:0"
									},
									"src": "9803:43:0"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "9971:125:0",
										"statements": [
											{
												"assignments": [
													324
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "9978:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 323,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9978:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 327,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 325,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9998:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9998:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9978:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 328,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10017:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 329,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "10026:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10017:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "10017:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10076:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10068:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 336,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "10080:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 332,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10047:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10047:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "10042:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 340,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9959:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9971:0:0"
									},
									"scope": 510,
									"src": "9947:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 342,
									"name": "tokenLocked",
									"nodeType": "VariableDeclaration",
									"scope": 510,
									"src": "10106:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 341,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10106:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 346,
									"name": "walletLocked",
									"nodeType": "VariableDeclaration",
									"scope": 510,
									"src": "10136:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 345,
										"keyType": {
											"id": 343,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10144:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10136:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 344,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "10155:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "10231:123:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10250:12:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 352,
																"name": "tokenLocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "10251:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e20697320616c7265616479206c6f636b6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10264:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6522f61249cd006741e70b982be43809220419afb4a762e5f791fd057664f2f",
																"typeString": "literal_string \"Token is already locked\""
															},
															"value": "Token is already locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6522f61249cd006741e70b982be43809220419afb4a762e5f791fd057664f2f",
																"typeString": "literal_string \"Token is already locked\""
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "10242:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10242:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "10242:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 357,
														"name": "tokenLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "10301:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10315:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10301:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "10301:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 361,
														"name": "TokenLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "10335:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10335:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "EmitStatement",
												"src": "10330:16:0"
											}
										]
									},
									"documentation": null,
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 349,
											"modifierName": {
												"argumentTypes": null,
												"id": 348,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 454,
												"src": "10221:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10221:9:0"
										}
									],
									"name": "lockToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10209:2:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10231:0:0"
									},
									"scope": 510,
									"src": "10191:163:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "10404:127:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 371,
															"name": "tokenLocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "10423:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e20697320616c726561647920756e6c6f636b6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10436:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71c56afa06c9528dba646f498604ef29a30e64c6dd8ed0c6fe20b6fc7c8c1193",
																"typeString": "literal_string \"Token is already unlocked\""
															},
															"value": "Token is already unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71c56afa06c9528dba646f498604ef29a30e64c6dd8ed0c6fe20b6fc7c8c1193",
																"typeString": "literal_string \"Token is already unlocked\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "10415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10415:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "10415:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 375,
														"name": "tokenLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "10475:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10489:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10475:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "10475:19:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 379,
														"name": "TokenUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "10510:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10510:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "EmitStatement",
												"src": "10505:18:0"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 368,
											"modifierName": {
												"argumentTypes": null,
												"id": 367,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 454,
												"src": "10394:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10394:9:0"
										}
									],
									"name": "unlockToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10382:2:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10404:0:0"
									},
									"scope": 510,
									"src": "10362:169:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "10595:152:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10614:22:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 391,
																	"name": "walletLocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "10615:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 393,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 392,
																	"name": "_wallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "10628:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10615:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "57616c6c657420697320616c7265616479206c6f636b6564",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10638:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a354a55ba91a9b08d06160fa8847a7b742c207a6ccc6aa916c307132c4a3947a",
																"typeString": "literal_string \"Wallet is already locked\""
															},
															"value": "Wallet is already locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a354a55ba91a9b08d06160fa8847a7b742c207a6ccc6aa916c307132c4a3947a",
																"typeString": "literal_string \"Wallet is already locked\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "10606:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10606:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "10606:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 398,
															"name": "walletLocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "10676:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 400,
														"indexExpression": {
															"argumentTypes": null,
															"id": 399,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "10689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10676:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10700:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10676:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "10676:28:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 405,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "10731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 404,
														"name": "WalletLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "10720:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10720:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "EmitStatement",
												"src": "10715:24:0"
											}
										]
									},
									"documentation": null,
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 388,
											"modifierName": {
												"argumentTypes": null,
												"id": 387,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 454,
												"src": "10585:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10585:9:0"
										}
									],
									"name": "lockWallet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"name": "_wallet",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "10559:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10558:17:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10595:0:0"
									},
									"scope": 510,
									"src": "10539:208:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "10813:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 417,
																"name": "walletLocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "10832:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 419,
															"indexExpression": {
																"argumentTypes": null,
																"id": 418,
																"name": "_wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "10845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10832:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "57616c6c657420697320616c726561647920756e6c6f636b6564",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10855:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96058a0c609f6ccc18a6fa826bbc7b2af252b28647e45763d68ace150f44999a",
																"typeString": "literal_string \"Wallet is already unlocked\""
															},
															"value": "Wallet is already unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96058a0c609f6ccc18a6fa826bbc7b2af252b28647e45763d68ace150f44999a",
																"typeString": "literal_string \"Wallet is already unlocked\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "10824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10824:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "10824:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 423,
															"name": "walletLocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "10895:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 425,
														"indexExpression": {
															"argumentTypes": null,
															"id": 424,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "10908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10895:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10919:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10895:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "10895:29:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 430,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "10953:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 429,
														"name": "WalletUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "10940:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10940:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "EmitStatement",
												"src": "10935:26:0"
											}
										]
									},
									"documentation": null,
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 414,
											"modifierName": {
												"argumentTypes": null,
												"id": 413,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 454,
												"src": "10803:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10803:9:0"
										}
									],
									"name": "unlockWallet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"name": "_wallet",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10777:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10776:17:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10813:0:0"
									},
									"scope": 510,
									"src": "10755:214:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "11091:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 439,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "11105:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 438,
												"id": 440,
												"nodeType": "Return",
												"src": "11098:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11058:2:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "11082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11081:9:0"
									},
									"scope": 510,
									"src": "11044:73:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "11223:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 445,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "11238:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 446,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "11248:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11248:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11238:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11262:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "11230:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11230:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "11230:67:0"
											},
											{
												"id": 452,
												"nodeType": "PlaceholderStatement",
												"src": "11304:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 454,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11220:2:0"
									},
									"src": "11202:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "11692:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 460,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11725:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11741:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11733:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 459,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "11704:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11704:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "11699:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 466,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11751:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11768:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11760:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11760:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "11751:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "11751:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 457,
											"modifierName": {
												"argumentTypes": null,
												"id": 456,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 454,
												"src": "11682:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11682:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11672:2:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11692:0:0"
									},
									"scope": 510,
									"src": "11646:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "11983:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 481,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "12009:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 480,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "11990:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11990:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "11990:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 478,
											"modifierName": {
												"argumentTypes": null,
												"id": 477,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 454,
												"src": "11973:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11973:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "11948:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11947:18:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11983:0:0"
									},
									"scope": 510,
									"src": "11921:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "12177:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 491,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "12192:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12212:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12204:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12204:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12192:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12216:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "12184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12184:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "12184:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 500,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "12290:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 501,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "12298:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 499,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "12269:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12269:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "EmitStatement",
												"src": "12264:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 504,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "12314:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 505,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "12323:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12314:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "12314:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12150:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12149:18:0"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12177:0:0"
									},
									"scope": 510,
									"src": "12122:215:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1006,
							"src": "9550:2790:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 511,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "12367:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 512,
									"nodeType": "InheritanceSpecifier",
									"src": "12367:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 513,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "12376:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 514,
									"nodeType": "InheritanceSpecifier",
									"src": "12376:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 515,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 510,
										"src": "12384:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$510",
											"typeString": "contract Ownable"
										}
									},
									"id": 516,
									"nodeType": "InheritanceSpecifier",
									"src": "12384:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								510
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1005,
							"linearizedBaseContracts": [
								1005,
								510,
								88,
								113
							],
							"name": "BEP20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 519,
									"libraryName": {
										"contractScope": null,
										"id": 517,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "12403:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "12397:27:0",
									"typeName": {
										"id": 518,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12416:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 523,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "12430:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 522,
										"keyType": {
											"id": 520,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12439:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12430:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 521,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12450:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 529,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "12483:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 528,
										"keyType": {
											"id": 524,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12492:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12483:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 527,
											"keyType": {
												"id": 525,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12512:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12503:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 526,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12523:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 531,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "12559:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 530,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12559:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 533,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "12592:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 532,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "12592:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 535,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "12620:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 534,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12620:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 537,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "12647:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 536,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12647:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "12697:222:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 540,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "12704:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "496d4d657461547261646572",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12712:14:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_d8043acc61ad0616a0f7639e37f8a298e3a9231f0d57f193976d60bdfc534bf1",
															"typeString": "literal_string \"ImMetaTrader\""
														},
														"value": "ImMetaTrader"
													},
													"src": "12704:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "12704:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 544,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "12733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "494d4d54",
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12743:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_33b7f41f3073694984b90cc9b708251a73b55ef4b1d37f3baa5c15094bfbcbcf",
															"typeString": "literal_string \"IMMT\""
														},
														"value": "IMMT"
													},
													"src": "12733:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "12733:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 548,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "12756:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "38",
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12768:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "12756:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "12756:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 552,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "12776:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31303030303030303030303030303030303030",
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12791:19:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1000000000000000000"
													},
													"src": "12776:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "12776:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 556,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "12817:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 559,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 557,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "12827:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12827:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12817:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 560,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "12841:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12817:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "12817:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12884:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12876:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12876:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 567,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "12888:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12888:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 569,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "12900:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "12867:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12867:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "EmitStatement",
												"src": "12862:51:0"
											}
										]
									},
									"documentation": null,
									"id": 573,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12687:2:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12697:0:0"
									},
									"scope": 1005,
									"src": "12676:243:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "13035:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 578,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "13049:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 577,
												"id": 580,
												"nodeType": "Return",
												"src": "13042:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13000:2:0"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "13026:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13025:9:0"
									},
									"scope": 1005,
									"src": "12983:79:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "13171:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 587,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 533,
													"src": "13185:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 586,
												"id": 588,
												"nodeType": "Return",
												"src": "13178:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13138:2:0"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "13164:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 584,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13164:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13163:7:0"
									},
									"scope": 1005,
									"src": "13121:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "13313:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 595,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 535,
													"src": "13327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 594,
												"id": 596,
												"nodeType": "Return",
												"src": "13320:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13272:2:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "13298:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 592,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13297:15:0"
									},
									"scope": 1005,
									"src": "13257:83:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "13447:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 603,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 537,
													"src": "13461:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 602,
												"id": 604,
												"nodeType": "Return",
												"src": "13454:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13406:2:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "13432:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 600,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13432:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13431:15:0"
									},
									"scope": 1005,
									"src": "13393:79:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "13583:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 611,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 531,
													"src": "13597:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 612,
												"nodeType": "Return",
												"src": "13590:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13548:2:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13574:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13573:9:0"
									},
									"scope": 1005,
									"src": "13528:87:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "13737:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 621,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "13751:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 623,
													"indexExpression": {
														"argumentTypes": null,
														"id": 622,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "13761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13751:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 620,
												"id": 624,
												"nodeType": "Return",
												"src": "13744:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "13688:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13687:17:0"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "13728:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13727:9:0"
									},
									"scope": 1005,
									"src": "13669:106:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "14046:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 636,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14063:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14063:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 638,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "14077:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "14088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "14053:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14053:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "14053:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14109:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 634,
												"id": 643,
												"nodeType": "Return",
												"src": "14102:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "13987:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "14006:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13986:35:0"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "14040:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14040:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14039:6:0"
									},
									"scope": 1005,
									"src": "13969:150:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "14256:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 654,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "14270:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 656,
														"indexExpression": {
															"argumentTypes": null,
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "14282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14270:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 658,
													"indexExpression": {
														"argumentTypes": null,
														"id": 657,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "14289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14270:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 653,
												"id": 659,
												"nodeType": "Return",
												"src": "14263:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "14192:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "14207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14191:32:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "14247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14246:9:0"
									},
									"scope": 1005,
									"src": "14173:130:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "14507:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 671,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14523:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14523:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 673,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "14537:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 674,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "14546:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 670,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "14514:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14514:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "14514:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14567:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 669,
												"id": 678,
												"nodeType": "Return",
												"src": "14560:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14449:33:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "14501:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14501:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14500:6:0"
									},
									"scope": 1005,
									"src": "14433:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "15119:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 692,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "15136:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 693,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "15144:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 694,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "15155:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 691,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "15126:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15126:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "15126:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 698,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "15178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 699,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15186:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15186:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 708,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "15238:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15246:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 701,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "15200:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 703,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 702,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 682,
																			"src": "15212:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15200:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 706,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 704,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "15220:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15220:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15200:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15200:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15200:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "15169:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15169:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "15169:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15304:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 690,
												"id": 714,
												"nodeType": "Return",
												"src": "15297:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "15044:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "15060:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "15079:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15043:51:0"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "15113:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15113:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15112:6:0"
									},
									"scope": 1005,
									"src": "15022:292:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "15786:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 726,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15802:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15802:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 728,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "15816:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 736,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "15864:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 729,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "15825:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 732,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 730,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15837:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15837:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15825:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 734,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 733,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 718,
																		"src": "15851:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15825:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "15825:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15825:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "15793:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15793:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "15793:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15890:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 724,
												"id": 741,
												"nodeType": "Return",
												"src": "15883:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "15727:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "15744:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15726:37:0"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "15780:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15779:6:0"
									},
									"scope": 1005,
									"src": "15700:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "16463:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 753,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "16479:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16479:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "16493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 763,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "16541:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16558:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 756,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "16502:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 759,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 757,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "16514:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16514:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16502:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 761,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 760,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "16528:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16502:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "16502:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16502:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 752,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "16470:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16470:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "16470:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16613:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 751,
												"id": 769,
												"nodeType": "Return",
												"src": "16606:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "16399:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "16416:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16398:42:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "16457:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16457:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16456:6:0"
									},
									"scope": 1005,
									"src": "16372:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "16885:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 781,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "16898:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16898:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 783,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "16912:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 780,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "16892:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16892:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "16892:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16933:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 779,
												"id": 787,
												"nodeType": "Return",
												"src": "16926:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n\n   * Requirements\n\n   * - `msg.sender` must be the token owner",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 776,
											"modifierName": {
												"argumentTypes": null,
												"id": 775,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 454,
												"src": "16860:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16860:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "16837:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16836:16:0"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "16879:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16878:6:0"
									},
									"scope": 1005,
									"src": "16823:120:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "17482:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 799,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "17497:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17515:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17507:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17507:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17497:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17519:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "17489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17489:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "17489:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 808,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "17574:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17595:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17587:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17587:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17574:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17599:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "17566:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17566:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "17566:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 816,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "17646:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 818,
														"indexExpression": {
															"argumentTypes": null,
															"id": 817,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "17656:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17646:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 823,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "17688:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17696:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 819,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17666:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 821,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 820,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "17676:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17666:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17666:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17666:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17646:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "17646:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 828,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "17744:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 830,
														"indexExpression": {
															"argumentTypes": null,
															"id": 829,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "17754:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17744:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 835,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "17792:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 831,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17767:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 833,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 832,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "17777:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17767:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "17767:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17767:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17744:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "17744:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 840,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "17820:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 841,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "17828:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 842,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "17839:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 839,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17811:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17811:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "EmitStatement",
												"src": "17806:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "17422:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "17438:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "17457:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17421:51:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17482:0:0"
									},
									"scope": 1005,
									"src": "17403:449:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "18170:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "18185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18204:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18196:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18196:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18185:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18208:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "18177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18177:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "18177:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 862,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "18251:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 865,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "18283:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 863,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "18266:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "18266:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18266:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18251:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "18251:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 869,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "18297:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 871,
														"indexExpression": {
															"argumentTypes": null,
															"id": 870,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "18307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18297:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 876,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "18341:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 872,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "18318:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 874,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 873,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "18328:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18318:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "18318:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18318:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18297:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "18297:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18377:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18369:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18369:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 884,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "18381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 885,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "18390:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 880,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "18360:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18360:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "18355:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address.",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18128:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18145:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18127:33:0"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18170:0:0"
									},
									"scope": 1005,
									"src": "18113:290:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "18768:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 897,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "18783:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18802:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18794:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18794:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18783:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18806:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 896,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "18775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18775:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "18775:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 905,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "18851:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 907,
														"indexExpression": {
															"argumentTypes": null,
															"id": 906,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "18861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18851:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 912,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "18895:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18903:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 908,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "18872:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 910,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 909,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "18882:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18872:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "18872:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18872:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18851:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "18851:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 917,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "18947:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 920,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "18979:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 918,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "18962:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "18962:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18962:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18947:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "18947:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 925,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "19007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19024:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19016:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19016:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 929,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "19028:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "18998:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18998:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "EmitStatement",
												"src": "18993:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "18726:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "18743:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18725:33:0"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18768:0:0"
									},
									"scope": 1005,
									"src": "18711:330:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "19528:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 943,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "19543:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19560:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19552:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19552:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19543:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19564:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "19535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19535:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "19535:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 952,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "19618:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19637:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19629:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19629:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19618:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19641:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1023,
															1024
														],
														"referencedDeclaration": 1024,
														"src": "19610:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19610:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "19610:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 960,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "19687:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 963,
															"indexExpression": {
																"argumentTypes": null,
																"id": 961,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "19699:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19687:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 964,
														"indexExpression": {
															"argumentTypes": null,
															"id": 962,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "19706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19687:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 965,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "19717:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19687:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "19687:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 969,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "19744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 970,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "19751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 971,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "19760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "19735:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19735:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "EmitStatement",
												"src": "19730:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "19471:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "19486:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "19503:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19470:48:0"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19528:0:0"
									},
									"scope": 1005,
									"src": "19453:320:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "20006:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 983,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "20019:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 984,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "20028:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "20013:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20013:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "20013:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 988,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "20051:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 989,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "20060:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20060:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 998,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "20113:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20121:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 991,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "20074:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 993,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 992,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "20086:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20074:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 996,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 994,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "20095:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20095:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20074:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "20074:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20074:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "20042:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20042:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "20042:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n   * See {_burn} and {_approve}.",
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "19964:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "19981:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19963:33:0"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20006:0:0"
									},
									"scope": 1005,
									"src": "19945:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1006,
							"src": "12344:7832:0"
						}
					],
					"src": "0:20176:0"
				},
				"id": 0
			}
		}
	}
}